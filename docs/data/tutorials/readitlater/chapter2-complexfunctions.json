{"variants":[{"paths":["\/tutorials\/readitlater\/chapter2-complexfunctions"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[{"xcodeRequirement":"Xcode 14","kind":"hero","title":"Cloud Firestore Triggers","chapter":"Complex cloud functions with Real world Example","estimatedTimeInMinutes":30,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This tutorial guides you through a typical scenario for using "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Cloud Functions"}]},{"type":"text","text":" in a Firebase app. You will write a "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Cloud Function"}]},{"type":"text","text":" that will be run every time the user write"}]}]},{"kind":"tasks","tasks":[{"anchor":"Add-new-Articles-to-Cloud-Firestore","title":"Add new Articles to Cloud Firestore","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add new articles to Firestore (in the client app)"}]}],"mediaPosition":"trailing"}],"stepsSection":[{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Do something!"}]}],"caption":[],"type":"step","runtimePreview":null,"media":null}]},{"anchor":"Implement-a-Cloud-Firestore-Trigger","title":"Implement a Cloud Firestore Trigger","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In this section, you will create a new Cloud Function that will be triggered whenever a user adds a new URL to their collection of articles they want to read later."}]}],"mediaPosition":"trailing"}],"stepsSection":[{"type":"paragraph","inlineContent":[{"type":"text","text":"First, make sure all the required dependencies are installed."}]},{"code":"chapter2-01-install-dependencies-01.sh","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Navigate into the "},{"type":"codeVoice","code":"functions"},{"type":"text","text":" folder."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"chapter2-01-install-dependencies-02.sh","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Install the dependencies."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"chapter2-01-install-dependencies-03.sh","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Open the "},{"type":"codeVoice","code":"functions"},{"type":"text","text":" folder in VSCode"}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"chapter2-02-implement-trigger-01.ts","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Navigate to the "},{"type":"codeVoice","code":"index.ts"},{"type":"text","text":" file."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This file already contains some boilerplate code that will make your life easier. In particular, it imports "},{"type":"codeVoice","code":"firebase-functions"},{"type":"text","text":" and "},{"type":"codeVoice","code":"firebase-admin"},{"type":"text","text":". It also defines an "},{"type":"codeVoice","code":"ArticleDocument"}]}],"type":"step","runtimePreview":null,"media":null},{"code":"chapter2-02-implement-trigger-02.ts","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"It also initialises Firebase."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"chapter2-02-implement-trigger-03.ts","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"And it contains an interface named "},{"type":"codeVoice","code":"ArticleDocument"},{"type":"text","text":" which will make it easier to work with the articles our app stores in Cloud Firestore."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"chapter2-02-implement-trigger-04.ts","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create a new function, naming it "},{"type":"codeVoice","code":"updateArticleMetadata"},{"type":"text","text":", and register a Cloud Firestore trigger."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This trigger will fire whenever a new document is created in the "},{"type":"codeVoice","code":"articles"},{"type":"text","text":" collection. It will then asynchronously call the closure and pass the newly created document as a snapshot."}]}],"type":"step","runtimePreview":null,"media":null}]},{"anchor":"Fetch-the-Articles-Metadata-and-HTML","title":"Fetch the Article's Metadata and HTML","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In the next step, you will use the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Mercury Parser"}]},{"type":"text","text":" to fetch the meta data and the simplified HTML of the article the user added."},{"type":"text","text":" "},{"type":"text","text":"Use Mercury Parser to get meta data and readable version of the article."}]}],"mediaPosition":"trailing"}],"stepsSection":[{"code":"chapter2-03-fetch-metadata-01.ts","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The document snapshot contains the document that was just added. [Show a screenshot of the data]."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Let’s read the "},{"type":"codeVoice","code":"url"},{"type":"text","text":" attribute from the document."}]}],"type":"step","runtimePreview":null,"media":null},{"code":"chapter2-03-fetch-metadata-02.ts","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"However, thanks to the "},{"type":"codeVoice","code":"ArticleDocument"},{"type":"text","text":" interface defined earlier in the file, you can simplify this code by casting the Firestore document snapshot to a "},{"type":"codeVoice","code":"ArticleDocument"},{"type":"text","text":"."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"chapter2-03-fetch-metadata-03.ts","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Before you can use the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Mercury Parser"}]},{"type":"text","text":" to parse the article at the URL, you need to import it first."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"chapter2-03-fetch-metadata-04.ts","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"You can now use the parser to fetch the article at the URL and extract its metadata (such as the author, the publication date, the lead image, and other details that are specified in the "},{"type":"reference","isActive":true,"identifier":"https:\/\/ogp.me\/"},{"type":"text","text":")"}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"chapter2-03-fetch-metadata-05.ts","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Next, you will update the metadata fields of the "},{"type":"codeVoice","code":"article"},{"type":"text","text":" object. Some of them were already filled on the client, but the Mercury Parser might be able to provide more details."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"For each of the metadata fields, first check to see if it’s already been filled out. If not, use the data in the "},{"type":"codeVoice","code":"metadata"},{"type":"text","text":" object to fill it."}]}],"type":"step","runtimePreview":null,"media":null},{"code":"chapter2-03-fetch-metadata-06.ts","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Repeat the process for all relevant metadata fields."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"chapter2-03-fetch-metadata-07.ts","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Finally, fill the "},{"type":"codeVoice","code":"readableHTML"},{"type":"text","text":" field of the "},{"type":"codeVoice","code":"article"},{"type":"text","text":" with the data from the "},{"type":"codeVoice","code":"content"},{"type":"text","text":"attribute of the "},{"type":"codeVoice","code":"metadata"},{"type":"text","text":" object."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null}]},{"anchor":"Compute-the-Reading-Time","title":"Compute the Reading Time","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"To help users decide whether they have enough time to read an article, you will now add a feature for computing the estimated reading time of an article. To do this, you will strip all HTML tags from the article you downloaded in the previous step, and then compute the reading time on the raw text."}]}],"mediaPosition":"trailing"}],"stepsSection":[{"code":"chapter2-04-compute-reading-time-01.ts","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"First, import the "},{"type":"codeVoice","code":"readingTime"},{"type":"text","text":" and "},{"type":"codeVoice","code":"stripHtml"},{"type":"text","text":" packges."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"chapter2-04-compute-reading-time-02.ts","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Then, make sure the reading time has not been set yet on the "},{"type":"codeVoice","code":"articleDocument"},{"type":"text","text":" object"}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"chapter2-04-compute-reading-time-03.ts","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"You can now use the "},{"type":"codeVoice","code":"stripHtml"},{"type":"text","text":" package to remove all HTML tags from the source code of the article you downloaded in an earlier step."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"chapter2-04-compute-reading-time-04.ts","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Once you’ve got the raw text of the article, you can use the "},{"type":"codeVoice","code":"readingTime"},{"type":"text","text":" package to compute the estimated reading time, and set the "},{"type":"codeVoice","code":"readingTime"},{"type":"text","text":" attribute on the "},{"type":"codeVoice","code":"articleDocument"},{"type":"text","text":" object."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"chapter2-04-compute-reading-time-05.ts","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"As the "},{"type":"codeVoice","code":"readingTime"},{"type":"text","text":" package has to determine the number of words in the article, you can store this informnation in the "},{"type":"codeVoice","code":"articleDocument"},{"type":"text","text":" object as well - it might come in handy."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null}]},{"anchor":"Update-the-Article-in-Cloud-Firestore","title":"Update the Article in Cloud Firestore","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Once you’ve performed all required backend processing, you will write the updated article document back to Cloud Firestore. Thanks to Firestore’s realtime sync capabilities, the data will automatically be updated in the user’s mobile app."}]}],"mediaPosition":"trailing"}],"stepsSection":[{"code":"chapter2-05-update-article-01.ts","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"To write the updates back to the document, use the "},{"type":"codeVoice","code":"set(data, options)"},{"type":"text","text":" method, and set the "},{"type":"codeVoice","code":"merge"},{"type":"text","text":" option to "},{"type":"codeVoice","code":"true"},{"type":"text","text":" to avoid overwriting any fields that you didn’t change."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null}]},{"anchor":"Wrap-Up","title":"Wrap Up","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"You’ve implemented a Cloud Function that runs whenever the user adds a new URL to their collection of articles they want to read. All of the processing takes place in the backend, which allows you to reuse this feature in all of your apps (both Android, iOS, and the web), resulting in some really great code reuse!"}]}],"mediaPosition":"trailing"}],"stepsSection":[{"code":"chapter2-06-wrapup-emulator.sh","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Run the Cloud Function using the Local Emulator Suite."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null}]}]},{"action":{"overridingTitleInlineContent":[{"type":"text","text":"Get started"}],"isActive":true,"type":"reference","identifier":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter3-CallableFunctions","overridingTitle":"Get started"},"featuredEyebrow":"Tutorial","kind":"callToAction","title":"Building Intelligent Applications with Callable Functions and OpenAI APIs","abstract":[{"type":"text","text":"In this part, we will explore how to build intelligent applications with OpenAI APIs using callable functions. We will begin by discussing the benefits of using callable functions and how they can be used to leverage the power of OpenAI APIs."}]}],"identifier":{"url":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter2-ComplexFunctions","interfaceLanguage":"swift"},"kind":"project","metadata":{"title":"Cloud Firestore Triggers","categoryPathComponent":"SuperchargeYourAppWithCF","role":"project","category":"Supercharge Your APP with Cloud Functions"},"hierarchy":{"modules":[{"reference":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/SuperchargeYourAppWithCF\/Simple-HTTPS-Functions-and-Calling-Them-From-iOS-\/-Android-App","projects":[{"reference":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter1-SimpleFunctions","sections":[{"kind":"task","reference":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter1-SimpleFunctions#Create-Simple-Cloud-Functions"},{"kind":"task","reference":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter1-SimpleFunctions#Deploy-And-Test-Your-Functions"},{"kind":"task","reference":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter1-SimpleFunctions#Add-Firebase-TO-iOSAndroid-APP"},{"kind":"task","reference":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter1-SimpleFunctions#Use-of-Firebase-Emulator"}]}]},{"reference":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/SuperchargeYourAppWithCF\/Complex-cloud-functions-with-Real-world-Example","projects":[{"reference":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter2-ComplexFunctions","sections":[{"kind":"task","reference":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter2-ComplexFunctions#Add-new-Articles-to-Cloud-Firestore"},{"kind":"task","reference":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter2-ComplexFunctions#Implement-a-Cloud-Firestore-Trigger"},{"kind":"task","reference":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter2-ComplexFunctions#Fetch-the-Articles-Metadata-and-HTML"},{"kind":"task","reference":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter2-ComplexFunctions#Compute-the-Reading-Time"},{"kind":"task","reference":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter2-ComplexFunctions#Update-the-Article-in-Cloud-Firestore"},{"kind":"task","reference":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter2-ComplexFunctions#Wrap-Up"}]}]},{"reference":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/SuperchargeYourAppWithCF\/Building-Intelligent-Applications-with-Callable-Functions-and-OpenAI-APIs","projects":[{"reference":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter3-CallableFunctions","sections":[{"kind":"task","reference":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter3-CallableFunctions#Callable-Functions"}]}]},{"reference":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/SuperchargeYourAppWithCF\/Use-of-Extensions-and-pub\/sub-Functions","projects":[{"reference":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter4-FirebaseExtensions","sections":[{"kind":"task","reference":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter4-FirebaseExtensions#Set-Up-Email-Extension"},{"kind":"task","reference":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter4-FirebaseExtensions#Adding-pubsub-Functions"},{"kind":"task","reference":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter4-FirebaseExtensions#Bonus-Content-Handlebar"}]}]}],"reference":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/SuperchargeYourAppWithCF","paths":[["doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/SuperchargeYourAppWithCF","doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/SuperchargeYourAppWithCF\/$volume","doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/SuperchargeYourAppWithCF\/Complex-cloud-functions-with-Real-world-Example"]]},"references":{"chapter2-04-compute-reading-time-04.ts":{"syntax":"ts","content":["import * as functions from \"firebase-functions\";","import * as admin from \"firebase-admin\";","","import * as parser from \"@postlight\/mercury-parser\";","import { readingTime } from \"reading-time-estimator\";","import { stripHtml } from \"string-strip-html\";","","\/\/ ------------------ Firebase initialisation ------------------","","admin.initializeApp();","","\/\/ ------------------ Fetch readable HTML ------------------","","\/\/ define a type for the article document","interface ArticleDocument {","  author?: string;","  \/\/ dateAdded?: Timestamp;","  datePublished: string;","  excerpt?: string;","  imageUrl?: string;","  isRead?: boolean;","  notes?: string;","  siteName?: string;","  status?: string;","  title?: string;","  url: string;","  userId?: string;","  wordCount: number;","  readingTime: number;","  readableHTML: string;","}","","export const updateArticleMetadata = ","  functions","    .firestore","    .document(\"articles\/{documentId}\")","    .onCreate(async (documentSnapshot) => {","","  \/\/ cast the document snapshot to the article document type","  const articleDocument = documentSnapshot.data() as ArticleDocument;","","  \/\/ get the url of the article","  const url = articleDocument.url;","","  \/\/ parse the url using the Mercury Parser to get the metadata and readable content","  const metadata = await parser.parse(url);","","  if (!articleDocument.author && metadata.author) {","    articleDocument.author = metadata.author;","  }","","  if (!articleDocument.title && metadata.title) {","    articleDocument.title = metadata.title;","  }","","  if (!articleDocument.datePublished && metadata.date_published) {","    articleDocument.datePublished = metadata.date_published;","  }","","  if (!articleDocument.imageUrl && metadata.lead_image_url) {","    articleDocument.imageUrl = metadata.lead_image_url;","  }","","  if (!articleDocument.siteName && metadata.domain) {","    articleDocument.siteName = metadata.domain;","  }","","  if (!articleDocument.excerpt && metadata.excerpt) {","    articleDocument.excerpt = metadata.excerpt;","  }  ","","  if (!articleDocument.readableHTML && metadata.content) {","    articleDocument.readableHTML = metadata.content;","  }","","  \/\/ compute the reading time in minutes using read-time-estimate","  if (!articleDocument.readingTime && metadata.content) {","    const strippedContent = stripHtml(metadata.content).result;","","    const readTime = readingTime(strippedContent);","  }","","});"],"fileName":"index.ts","identifier":"chapter2-04-compute-reading-time-04.ts","type":"file","fileType":"ts","highlights":[{"line":79},{"line":80}]},"chapter2-01-install-dependencies-02.sh":{"syntax":"","content":["$ cd functions","$ npm install"],"fileName":"Shell","identifier":"chapter2-01-install-dependencies-02.sh","type":"file","fileType":"","highlights":[{"line":2}]},"doc://com.example.firebase.workshop.ReadItLater/tutorials/ReadItLater/Chapter1-SimpleFunctions":{"role":"project","title":"Simple HTTPS Functions and Calling Them From iOS \/ Android App","estimatedTime":"50min","abstract":[{"type":"text","text":"Welcome to this chapter, where we will explore the exciting world of Simple HTTPS Functions and calling them from iOS \/ Android app. In this chapter, we will dive into the nuts and bolts of how to create and call simple HTTPS functions, including a hello world function and a greet the user function."}],"identifier":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter1-SimpleFunctions","kind":"project","type":"topic","url":"\/tutorials\/readitlater\/chapter1-simplefunctions"},"doc://com.example.firebase.workshop.ReadItLater/tutorials/SuperchargeYourAppWithCF":{"role":"overview","title":"Introduction","abstract":[{"type":"text","text":"Accessing (backend) APIs can be a hassle for mobile engineers. Often, those APIs don’t deliver the data in the format (or structure) we need, so we have to write custom parsing logic on the client."}],"identifier":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/SuperchargeYourAppWithCF","kind":"overview","type":"topic","url":"\/tutorials\/superchargeyourappwithcf"},"chapter2-03-fetch-metadata-01.ts":{"syntax":"ts","content":["import * as functions from \"firebase-functions\";","import * as admin from \"firebase-admin\";","","\/\/ ------------------ Firebase initialisation ------------------","","admin.initializeApp();","","\/\/ ------------------ Fetch readable HTML ------------------","","\/\/ define a type for the article document","interface ArticleDocument {","  author?: string;","  \/\/ dateAdded?: Timestamp;","  datePublished: string;","  excerpt?: string;","  imageUrl?: string;","  isRead?: boolean;","  notes?: string;","  siteName?: string;","  status?: string;","  title?: string;","  url: string;","  userId?: string;","  wordCount: number;","  readingTime: number;","  readableHTML: string;","}","","export const updateArticleMetadata = ","  functions","    .firestore","    .document(\"articles\/{documentId}\")","    .onCreate(async (documentSnapshot) => {","","  \/\/ get the url of the article","  const url = documentSnapshot.data().url;","","});"],"fileName":"index.ts","identifier":"chapter2-03-fetch-metadata-01.ts","type":"file","fileType":"ts","highlights":[{"line":35},{"line":36},{"line":37}]},"chapter2-02-implement-trigger-03.ts":{"syntax":"ts","content":["import * as functions from \"firebase-functions\";","import * as admin from \"firebase-admin\";","","\/\/ ------------------ Firebase initialisation ------------------","","admin.initializeApp();","","\/\/ ------------------ Fetch readable HTML ------------------","","\/\/ define a type for the article document","interface ArticleDocument {","  author?: string;","  \/\/ dateAdded?: Timestamp;","  datePublished: string;","  excerpt?: string;","  imageUrl?: string;","  isRead?: boolean;","  notes?: string;","  siteName?: string;","  status?: string;","  title?: string;","  url: string;","  userId?: string;","  wordCount: number;","  readingTime: number;","  readableHTML: string;","}"],"fileName":"index.ts","identifier":"chapter2-02-implement-trigger-03.ts","type":"file","fileType":"ts","highlights":[{"line":7},{"line":8},{"line":9},{"line":10},{"line":11},{"line":12},{"line":13},{"line":14},{"line":15},{"line":16},{"line":17},{"line":18},{"line":19},{"line":20},{"line":21},{"line":22},{"line":23},{"line":24},{"line":25},{"line":26},{"line":27}]},"doc://com.example.firebase.workshop.ReadItLater/tutorials/ReadItLater/Chapter3-CallableFunctions#Callable-Functions":{"role":"pseudoSymbol","title":"Callable Functions","abstract":[{"type":"text","text":"In this part, we will explore how to build intelligent applications with OpenAI APIs using callable functions. We will begin by discussing the benefits of using callable functions and how they can be used to leverage the power of OpenAI APIs."}],"identifier":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter3-CallableFunctions#Callable-Functions","kind":"section","type":"section","url":"\/tutorials\/readitlater\/chapter3-callablefunctions#Callable-Functions"},"chapter2-03-fetch-metadata-07.ts":{"syntax":"ts","content":["import * as functions from \"firebase-functions\";","import * as admin from \"firebase-admin\";","","import * as parser from \"@postlight\/mercury-parser\";","","\/\/ ------------------ Firebase initialisation ------------------","","admin.initializeApp();","","\/\/ ------------------ Fetch readable HTML ------------------","","\/\/ define a type for the article document","interface ArticleDocument {","  author?: string;","  \/\/ dateAdded?: Timestamp;","  datePublished: string;","  excerpt?: string;","  imageUrl?: string;","  isRead?: boolean;","  notes?: string;","  siteName?: string;","  status?: string;","  title?: string;","  url: string;","  userId?: string;","  wordCount: number;","  readingTime: number;","  readableHTML: string;","}","","export const updateArticleMetadata = ","  functions","    .firestore","    .document(\"articles\/{documentId}\")","    .onCreate(async (documentSnapshot) => {","","  \/\/ cast the document snapshot to the article document type","  const articleDocument = documentSnapshot.data() as ArticleDocument;","","  \/\/ get the url of the article","  const url = articleDocument.url;","","  \/\/ parse the url using the Mercury Parser to get the metadata and readable content","  const metadata = await parser.parse(url);","","  if (!articleDocument.author && metadata.author) {","    articleDocument.author = metadata.author;","  }","","  if (!articleDocument.title && metadata.title) {","    articleDocument.title = metadata.title;","  }","","  if (!articleDocument.datePublished && metadata.date_published) {","    articleDocument.datePublished = metadata.date_published;","  }","","  if (!articleDocument.imageUrl && metadata.lead_image_url) {","    articleDocument.imageUrl = metadata.lead_image_url;","  }","","  if (!articleDocument.siteName && metadata.domain) {","    articleDocument.siteName = metadata.domain;","  }","","  if (!articleDocument.excerpt && metadata.excerpt) {","    articleDocument.excerpt = metadata.excerpt;","  }  ","","  if (!articleDocument.readableHTML && metadata.content) {","    articleDocument.readableHTML = metadata.content;","  }","","});"],"fileName":"index.ts","identifier":"chapter2-03-fetch-metadata-07.ts","type":"file","fileType":"ts","highlights":[{"line":70},{"line":71},{"line":72},{"line":73}]},"chapter2-04-compute-reading-time-01.ts":{"syntax":"ts","content":["import * as functions from \"firebase-functions\";","import * as admin from \"firebase-admin\";","","import * as parser from \"@postlight\/mercury-parser\";","import { readingTime } from \"reading-time-estimator\";","import { stripHtml } from \"string-strip-html\";","","\/\/ ------------------ Firebase initialisation ------------------","","admin.initializeApp();","","\/\/ ------------------ Fetch readable HTML ------------------","","\/\/ define a type for the article document","interface ArticleDocument {","  author?: string;","  \/\/ dateAdded?: Timestamp;","  datePublished: string;","  excerpt?: string;","  imageUrl?: string;","  isRead?: boolean;","  notes?: string;","  siteName?: string;","  status?: string;","  title?: string;","  url: string;","  userId?: string;","  wordCount: number;","  readingTime: number;","  readableHTML: string;","}","","export const updateArticleMetadata = ","  functions","    .firestore","    .document(\"articles\/{documentId}\")","    .onCreate(async (documentSnapshot) => {","","  \/\/ cast the document snapshot to the article document type","  const articleDocument = documentSnapshot.data() as ArticleDocument;","","  \/\/ get the url of the article","  const url = articleDocument.url;","","  \/\/ parse the url using the Mercury Parser to get the metadata and readable content","  const metadata = await parser.parse(url);","","  if (!articleDocument.author && metadata.author) {","    articleDocument.author = metadata.author;","  }","","  if (!articleDocument.title && metadata.title) {","    articleDocument.title = metadata.title;","  }","","  if (!articleDocument.datePublished && metadata.date_published) {","    articleDocument.datePublished = metadata.date_published;","  }","","  if (!articleDocument.imageUrl && metadata.lead_image_url) {","    articleDocument.imageUrl = metadata.lead_image_url;","  }","","  if (!articleDocument.siteName && metadata.domain) {","    articleDocument.siteName = metadata.domain;","  }","","  if (!articleDocument.excerpt && metadata.excerpt) {","    articleDocument.excerpt = metadata.excerpt;","  }  ","","  if (!articleDocument.readableHTML && metadata.content) {","    articleDocument.readableHTML = metadata.content;","  }","","});"],"fileName":"index.ts","identifier":"chapter2-04-compute-reading-time-01.ts","type":"file","fileType":"ts","highlights":[{"line":5},{"line":6}]},"chapter2-03-fetch-metadata-02.ts":{"syntax":"ts","content":["import * as functions from \"firebase-functions\";","import * as admin from \"firebase-admin\";","","\/\/ ------------------ Firebase initialisation ------------------","","admin.initializeApp();","","\/\/ ------------------ Fetch readable HTML ------------------","","\/\/ define a type for the article document","interface ArticleDocument {","  author?: string;","  \/\/ dateAdded?: Timestamp;","  datePublished: string;","  excerpt?: string;","  imageUrl?: string;","  isRead?: boolean;","  notes?: string;","  siteName?: string;","  status?: string;","  title?: string;","  url: string;","  userId?: string;","  wordCount: number;","  readingTime: number;","  readableHTML: string;","}","","export const updateArticleMetadata = ","  functions","    .firestore","    .document(\"articles\/{documentId}\")","    .onCreate(async (documentSnapshot) => {","","  \/\/ cast the document snapshot to the article document type","  const articleDocument = documentSnapshot.data() as ArticleDocument;","","  \/\/ get the url of the article","  const url = articleDocument.url;","","});"],"fileName":"index.ts","identifier":"chapter2-03-fetch-metadata-02.ts","type":"file","fileType":"ts","highlights":[{"line":35},{"line":36},{"line":37},{"line":39}]},"chapter2-03-fetch-metadata-04.ts":{"syntax":"ts","content":["import * as functions from \"firebase-functions\";","import * as admin from \"firebase-admin\";","","import * as parser from \"@postlight\/mercury-parser\";","","\/\/ ------------------ Firebase initialisation ------------------","","admin.initializeApp();","","\/\/ ------------------ Fetch readable HTML ------------------","","\/\/ define a type for the article document","interface ArticleDocument {","  author?: string;","  \/\/ dateAdded?: Timestamp;","  datePublished: string;","  excerpt?: string;","  imageUrl?: string;","  isRead?: boolean;","  notes?: string;","  siteName?: string;","  status?: string;","  title?: string;","  url: string;","  userId?: string;","  wordCount: number;","  readingTime: number;","  readableHTML: string;","}","","export const updateArticleMetadata = ","  functions","    .firestore","    .document(\"articles\/{documentId}\")","    .onCreate(async (documentSnapshot) => {","","  \/\/ cast the document snapshot to the article document type","  const articleDocument = documentSnapshot.data() as ArticleDocument;","","  \/\/ get the url of the article","  const url = articleDocument.url;","","  \/\/ parse the url using the Mercury Parser to get the metadata and readable content","  const metadata = await parser.parse(url);","","});"],"fileName":"index.ts","identifier":"chapter2-03-fetch-metadata-04.ts","type":"file","fileType":"ts","highlights":[{"line":43},{"line":44},{"line":45}]},"doc://com.example.firebase.workshop.ReadItLater/tutorials/ReadItLater/Chapter1-SimpleFunctions#Use-of-Firebase-Emulator":{"role":"pseudoSymbol","title":"Use of Firebase Emulator","abstract":[{"type":"text","text":"Welcome to this chapter, where we will explore the exciting world of Simple HTTPS Functions and calling them from iOS \/ Android app. In this chapter, we will dive into the nuts and bolts of how to create and call simple HTTPS functions, including a hello world function and a greet the user function."}],"identifier":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter1-SimpleFunctions#Use-of-Firebase-Emulator","kind":"section","type":"section","url":"\/tutorials\/readitlater\/chapter1-simplefunctions#Use-of-Firebase-Emulator"},"doc://com.example.firebase.workshop.ReadItLater/tutorials/ReadItLater/Chapter2-ComplexFunctions":{"role":"project","title":"Cloud Firestore Triggers","estimatedTime":"30min","abstract":[{"type":"text","text":"This tutorial guides you through a typical scenario for using "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Cloud Functions"}]},{"type":"text","text":" in a Firebase app. You will write a "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Cloud Function"}]},{"type":"text","text":" that will be run every time the user write"}],"identifier":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter2-ComplexFunctions","kind":"project","type":"topic","url":"\/tutorials\/readitlater\/chapter2-complexfunctions"},"chapter2-04-compute-reading-time-02.ts":{"syntax":"ts","content":["import * as functions from \"firebase-functions\";","import * as admin from \"firebase-admin\";","","import * as parser from \"@postlight\/mercury-parser\";","import { readingTime } from \"reading-time-estimator\";","import { stripHtml } from \"string-strip-html\";","","\/\/ ------------------ Firebase initialisation ------------------","","admin.initializeApp();","","\/\/ ------------------ Fetch readable HTML ------------------","","\/\/ define a type for the article document","interface ArticleDocument {","  author?: string;","  \/\/ dateAdded?: Timestamp;","  datePublished: string;","  excerpt?: string;","  imageUrl?: string;","  isRead?: boolean;","  notes?: string;","  siteName?: string;","  status?: string;","  title?: string;","  url: string;","  userId?: string;","  wordCount: number;","  readingTime: number;","  readableHTML: string;","}","","export const updateArticleMetadata = ","  functions","    .firestore","    .document(\"articles\/{documentId}\")","    .onCreate(async (documentSnapshot) => {","","  \/\/ cast the document snapshot to the article document type","  const articleDocument = documentSnapshot.data() as ArticleDocument;","","  \/\/ get the url of the article","  const url = articleDocument.url;","","  \/\/ parse the url using the Mercury Parser to get the metadata and readable content","  const metadata = await parser.parse(url);","","  if (!articleDocument.author && metadata.author) {","    articleDocument.author = metadata.author;","  }","","  if (!articleDocument.title && metadata.title) {","    articleDocument.title = metadata.title;","  }","","  if (!articleDocument.datePublished && metadata.date_published) {","    articleDocument.datePublished = metadata.date_published;","  }","","  if (!articleDocument.imageUrl && metadata.lead_image_url) {","    articleDocument.imageUrl = metadata.lead_image_url;","  }","","  if (!articleDocument.siteName && metadata.domain) {","    articleDocument.siteName = metadata.domain;","  }","","  if (!articleDocument.excerpt && metadata.excerpt) {","    articleDocument.excerpt = metadata.excerpt;","  }  ","","  if (!articleDocument.readableHTML && metadata.content) {","    articleDocument.readableHTML = metadata.content;","  }","","  \/\/ compute the reading time in minutes using read-time-estimate","  if (!articleDocument.readingTime && metadata.content) {","  }","","});"],"fileName":"index.ts","identifier":"chapter2-04-compute-reading-time-02.ts","type":"file","fileType":"ts","highlights":[{"line":76},{"line":77},{"line":78},{"line":79}]},"doc://com.example.firebase.workshop.ReadItLater/tutorials/ReadItLater/Chapter3-CallableFunctions":{"role":"project","title":"Building Intelligent Applications with Callable Functions and OpenAI APIs","estimatedTime":"1hr 10min","abstract":[{"type":"text","text":"In this part, we will explore how to build intelligent applications with OpenAI APIs using callable functions. We will begin by discussing the benefits of using callable functions and how they can be used to leverage the power of OpenAI APIs."}],"identifier":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter3-CallableFunctions","kind":"project","type":"topic","url":"\/tutorials\/readitlater\/chapter3-callablefunctions"},"chapter2-06-wrapup-emulator.sh":{"syntax":"","content":["$ firebase emulators:start --import data --export-on-exit"],"fileName":"Shell","identifier":"chapter2-06-wrapup-emulator.sh","type":"file","fileType":"","highlights":[]},"doc://com.example.firebase.workshop.ReadItLater/tutorials/ReadItLater/Chapter2-ComplexFunctions#Implement-a-Cloud-Firestore-Trigger":{"role":"pseudoSymbol","title":"Implement a Cloud Firestore Trigger","abstract":[{"type":"text","text":"This tutorial guides you through a typical scenario for using "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Cloud Functions"}]},{"type":"text","text":" in a Firebase app. You will write a "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Cloud Function"}]},{"type":"text","text":" that will be run every time the user write"}],"identifier":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter2-ComplexFunctions#Implement-a-Cloud-Firestore-Trigger","kind":"section","type":"section","url":"\/tutorials\/readitlater\/chapter2-complexfunctions#Implement-a-Cloud-Firestore-Trigger"},"chapter2-02-implement-trigger-02.ts":{"syntax":"ts","content":["import * as functions from \"firebase-functions\";","import * as admin from \"firebase-admin\";","","\/\/ ------------------ Firebase initialisation ------------------","","admin.initializeApp();"],"fileName":"index.ts","identifier":"chapter2-02-implement-trigger-02.ts","type":"file","fileType":"ts","highlights":[{"line":3},{"line":4},{"line":5},{"line":6}]},"Xcode 14":{"title":"Xcode 14","type":"xcodeRequirement","identifier":"Xcode 14","url":"https:\/\/xcodereleases.com\/"},"doc://com.example.firebase.workshop.ReadItLater/tutorials/ReadItLater/Chapter2-ComplexFunctions#Compute-the-Reading-Time":{"role":"pseudoSymbol","title":"Compute the Reading Time","abstract":[{"type":"text","text":"This tutorial guides you through a typical scenario for using "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Cloud Functions"}]},{"type":"text","text":" in a Firebase app. You will write a "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Cloud Function"}]},{"type":"text","text":" that will be run every time the user write"}],"identifier":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter2-ComplexFunctions#Compute-the-Reading-Time","kind":"section","type":"section","url":"\/tutorials\/readitlater\/chapter2-complexfunctions#Compute-the-Reading-Time"},"doc://com.example.firebase.workshop.ReadItLater/tutorials/ReadItLater/Chapter1-SimpleFunctions#Deploy-And-Test-Your-Functions":{"role":"pseudoSymbol","title":"Deploy And Test Your Functions","abstract":[{"type":"text","text":"Welcome to this chapter, where we will explore the exciting world of Simple HTTPS Functions and calling them from iOS \/ Android app. In this chapter, we will dive into the nuts and bolts of how to create and call simple HTTPS functions, including a hello world function and a greet the user function."}],"identifier":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter1-SimpleFunctions#Deploy-And-Test-Your-Functions","kind":"section","type":"section","url":"\/tutorials\/readitlater\/chapter1-simplefunctions#Deploy-And-Test-Your-Functions"},"doc://com.example.firebase.workshop.ReadItLater/tutorials/SuperchargeYourAppWithCF/Complex-cloud-functions-with-Real-world-Example":{"role":"article","title":"Complex cloud functions with Real world Example","abstract":[],"identifier":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/SuperchargeYourAppWithCF\/Complex-cloud-functions-with-Real-world-Example","kind":"article","type":"topic","url":"\/tutorials\/superchargeyourappwithcf\/complex-cloud-functions-with-real-world-example"},"doc://com.example.firebase.workshop.ReadItLater/tutorials/ReadItLater/Chapter2-ComplexFunctions#Update-the-Article-in-Cloud-Firestore":{"role":"pseudoSymbol","title":"Update the Article in Cloud Firestore","abstract":[{"type":"text","text":"This tutorial guides you through a typical scenario for using "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Cloud Functions"}]},{"type":"text","text":" in a Firebase app. You will write a "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Cloud Function"}]},{"type":"text","text":" that will be run every time the user write"}],"identifier":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter2-ComplexFunctions#Update-the-Article-in-Cloud-Firestore","kind":"section","type":"section","url":"\/tutorials\/readitlater\/chapter2-complexfunctions#Update-the-Article-in-Cloud-Firestore"},"chapter2-02-implement-trigger-01.ts":{"syntax":"ts","content":["import * as functions from \"firebase-functions\";","import * as admin from \"firebase-admin\";"],"fileName":"index.ts","identifier":"chapter2-02-implement-trigger-01.ts","type":"file","fileType":"ts","highlights":[{"line":1},{"line":2}]},"chapter2-03-fetch-metadata-06.ts":{"syntax":"ts","content":["import * as functions from \"firebase-functions\";","import * as admin from \"firebase-admin\";","","import * as parser from \"@postlight\/mercury-parser\";","","\/\/ ------------------ Firebase initialisation ------------------","","admin.initializeApp();","","\/\/ ------------------ Fetch readable HTML ------------------","","\/\/ define a type for the article document","interface ArticleDocument {","  author?: string;","  \/\/ dateAdded?: Timestamp;","  datePublished: string;","  excerpt?: string;","  imageUrl?: string;","  isRead?: boolean;","  notes?: string;","  siteName?: string;","  status?: string;","  title?: string;","  url: string;","  userId?: string;","  wordCount: number;","  readingTime: number;","  readableHTML: string;","}","","export const updateArticleMetadata = ","  functions","    .firestore","    .document(\"articles\/{documentId}\")","    .onCreate(async (documentSnapshot) => {","","  \/\/ cast the document snapshot to the article document type","  const articleDocument = documentSnapshot.data() as ArticleDocument;","","  \/\/ get the url of the article","  const url = articleDocument.url;","","  \/\/ parse the url using the Mercury Parser to get the metadata and readable content","  const metadata = await parser.parse(url);","","  if (!articleDocument.author && metadata.author) {","    articleDocument.author = metadata.author;","  }","","  if (!articleDocument.title && metadata.title) {","    articleDocument.title = metadata.title;","  }","","  if (!articleDocument.datePublished && metadata.date_published) {","    articleDocument.datePublished = metadata.date_published;","  }","","  if (!articleDocument.imageUrl && metadata.lead_image_url) {","    articleDocument.imageUrl = metadata.lead_image_url;","  }","","  if (!articleDocument.siteName && metadata.domain) {","    articleDocument.siteName = metadata.domain;","  }","","  if (!articleDocument.excerpt && metadata.excerpt) {","    articleDocument.excerpt = metadata.excerpt;","  }  ","","});"],"fileName":"index.ts","identifier":"chapter2-03-fetch-metadata-06.ts","type":"file","fileType":"ts","highlights":[{"line":50},{"line":51},{"line":52},{"line":53},{"line":54},{"line":55},{"line":56},{"line":57},{"line":58},{"line":59},{"line":60},{"line":61},{"line":62},{"line":63},{"line":64},{"line":65},{"line":66},{"line":67},{"line":68},{"line":69}]},"https://ogp.me/":{"title":"OpenGraph spec","titleInlineContent":[{"type":"text","text":"OpenGraph spec"}],"type":"link","identifier":"https:\/\/ogp.me\/","url":"https:\/\/ogp.me\/"},"doc://com.example.firebase.workshop.ReadItLater/tutorials/SuperchargeYourAppWithCF/Simple-HTTPS-Functions-and-Calling-Them-From-iOS-/-Android-App":{"role":"article","title":"Simple HTTPS Functions and Calling Them From iOS \/ Android App","abstract":[],"identifier":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/SuperchargeYourAppWithCF\/Simple-HTTPS-Functions-and-Calling-Them-From-iOS-\/-Android-App","kind":"article","type":"topic","url":"\/tutorials\/superchargeyourappwithcf\/simple-https-functions-and-calling-them-from-ios-\/-android-app"},"doc://com.example.firebase.workshop.ReadItLater/tutorials/ReadItLater/Chapter1-SimpleFunctions#Add-Firebase-TO-iOSAndroid-APP":{"role":"pseudoSymbol","title":"Add Firebase TO iOS\/Android APP","abstract":[{"type":"text","text":"Welcome to this chapter, where we will explore the exciting world of Simple HTTPS Functions and calling them from iOS \/ Android app. In this chapter, we will dive into the nuts and bolts of how to create and call simple HTTPS functions, including a hello world function and a greet the user function."}],"identifier":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter1-SimpleFunctions#Add-Firebase-TO-iOSAndroid-APP","kind":"section","type":"section","url":"\/tutorials\/readitlater\/chapter1-simplefunctions#Add-Firebase-TO-iOSAndroid-APP"},"chapter2-02-implement-trigger-04.ts":{"syntax":"ts","content":["import * as functions from \"firebase-functions\";","import * as admin from \"firebase-admin\";","","\/\/ ------------------ Firebase initialisation ------------------","","admin.initializeApp();","","\/\/ ------------------ Fetch readable HTML ------------------","","\/\/ define a type for the article document","interface ArticleDocument {","  author?: string;","  \/\/ dateAdded?: Timestamp;","  datePublished: string;","  excerpt?: string;","  imageUrl?: string;","  isRead?: boolean;","  notes?: string;","  siteName?: string;","  status?: string;","  title?: string;","  url: string;","  userId?: string;","  wordCount: number;","  readingTime: number;","  readableHTML: string;","}","","export const updateArticleMetadata = ","  functions","    .firestore","    .document(\"articles\/{documentId}\")","    .onCreate(async (documentSnapshot) => {","","});"],"fileName":"index.ts","identifier":"chapter2-02-implement-trigger-04.ts","type":"file","fileType":"ts","highlights":[{"line":28},{"line":29},{"line":30},{"line":31},{"line":32},{"line":33},{"line":34},{"line":35}]},"chapter2-03-fetch-metadata-05.ts":{"syntax":"ts","content":["import * as functions from \"firebase-functions\";","import * as admin from \"firebase-admin\";","","import * as parser from \"@postlight\/mercury-parser\";","","\/\/ ------------------ Firebase initialisation ------------------","","admin.initializeApp();","","\/\/ ------------------ Fetch readable HTML ------------------","","\/\/ define a type for the article document","interface ArticleDocument {","  author?: string;","  \/\/ dateAdded?: Timestamp;","  datePublished: string;","  excerpt?: string;","  imageUrl?: string;","  isRead?: boolean;","  notes?: string;","  siteName?: string;","  status?: string;","  title?: string;","  url: string;","  userId?: string;","  wordCount: number;","  readingTime: number;","  readableHTML: string;","}","","export const updateArticleMetadata = ","  functions","    .firestore","    .document(\"articles\/{documentId}\")","    .onCreate(async (documentSnapshot) => {","","  \/\/ cast the document snapshot to the article document type","  const articleDocument = documentSnapshot.data() as ArticleDocument;","","  \/\/ get the url of the article","  const url = articleDocument.url;","","  \/\/ parse the url using the Mercury Parser to get the metadata and readable content","  const metadata = await parser.parse(url);","","  if (!articleDocument.author && metadata.author) {","    articleDocument.author = metadata.author;","  }","","});"],"fileName":"index.ts","identifier":"chapter2-03-fetch-metadata-05.ts","type":"file","fileType":"ts","highlights":[{"line":46},{"line":47},{"line":48},{"line":49}]},"chapter2-04-compute-reading-time-03.ts":{"syntax":"ts","content":["import * as functions from \"firebase-functions\";","import * as admin from \"firebase-admin\";","","import * as parser from \"@postlight\/mercury-parser\";","import { readingTime } from \"reading-time-estimator\";","import { stripHtml } from \"string-strip-html\";","","\/\/ ------------------ Firebase initialisation ------------------","","admin.initializeApp();","","\/\/ ------------------ Fetch readable HTML ------------------","","\/\/ define a type for the article document","interface ArticleDocument {","  author?: string;","  \/\/ dateAdded?: Timestamp;","  datePublished: string;","  excerpt?: string;","  imageUrl?: string;","  isRead?: boolean;","  notes?: string;","  siteName?: string;","  status?: string;","  title?: string;","  url: string;","  userId?: string;","  wordCount: number;","  readingTime: number;","  readableHTML: string;","}","","export const updateArticleMetadata = ","  functions","    .firestore","    .document(\"articles\/{documentId}\")","    .onCreate(async (documentSnapshot) => {","","  \/\/ cast the document snapshot to the article document type","  const articleDocument = documentSnapshot.data() as ArticleDocument;","","  \/\/ get the url of the article","  const url = articleDocument.url;","","  \/\/ parse the url using the Mercury Parser to get the metadata and readable content","  const metadata = await parser.parse(url);","","  if (!articleDocument.author && metadata.author) {","    articleDocument.author = metadata.author;","  }","","  if (!articleDocument.title && metadata.title) {","    articleDocument.title = metadata.title;","  }","","  if (!articleDocument.datePublished && metadata.date_published) {","    articleDocument.datePublished = metadata.date_published;","  }","","  if (!articleDocument.imageUrl && metadata.lead_image_url) {","    articleDocument.imageUrl = metadata.lead_image_url;","  }","","  if (!articleDocument.siteName && metadata.domain) {","    articleDocument.siteName = metadata.domain;","  }","","  if (!articleDocument.excerpt && metadata.excerpt) {","    articleDocument.excerpt = metadata.excerpt;","  }  ","","  if (!articleDocument.readableHTML && metadata.content) {","    articleDocument.readableHTML = metadata.content;","  }","","  \/\/ compute the reading time in minutes using read-time-estimate","  if (!articleDocument.readingTime && metadata.content) {","    const strippedContent = stripHtml(metadata.content).result;","  }","","});"],"fileName":"index.ts","identifier":"chapter2-04-compute-reading-time-03.ts","type":"file","fileType":"ts","highlights":[{"line":78}]},"chapter2-01-install-dependencies-03.sh":{"syntax":"","content":["$ cd functions","$ npm install","$ code ."],"fileName":"Shell","identifier":"chapter2-01-install-dependencies-03.sh","type":"file","fileType":"","highlights":[{"line":3}]},"doc://com.example.firebase.workshop.ReadItLater/tutorials/ReadItLater/Chapter1-SimpleFunctions#Create-Simple-Cloud-Functions":{"role":"pseudoSymbol","title":"Create Simple Cloud Functions","abstract":[{"type":"text","text":"Welcome to this chapter, where we will explore the exciting world of Simple HTTPS Functions and calling them from iOS \/ Android app. In this chapter, we will dive into the nuts and bolts of how to create and call simple HTTPS functions, including a hello world function and a greet the user function."}],"identifier":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter1-SimpleFunctions#Create-Simple-Cloud-Functions","kind":"section","type":"section","url":"\/tutorials\/readitlater\/chapter1-simplefunctions#Create-Simple-Cloud-Functions"},"chapter2-03-fetch-metadata-03.ts":{"syntax":"ts","content":["import * as functions from \"firebase-functions\";","import * as admin from \"firebase-admin\";","","import * as parser from \"@postlight\/mercury-parser\";","","\/\/ ------------------ Firebase initialisation ------------------","","admin.initializeApp();","","\/\/ ------------------ Fetch readable HTML ------------------","","\/\/ define a type for the article document","interface ArticleDocument {","  author?: string;","  \/\/ dateAdded?: Timestamp;","  datePublished: string;","  excerpt?: string;","  imageUrl?: string;","  isRead?: boolean;","  notes?: string;","  siteName?: string;","  status?: string;","  title?: string;","  url: string;","  userId?: string;","  wordCount: number;","  readingTime: number;","  readableHTML: string;","}","","export const updateArticleMetadata = ","  functions","    .firestore","    .document(\"articles\/{documentId}\")","    .onCreate(async (documentSnapshot) => {","","  \/\/ cast the document snapshot to the article document type","  const articleDocument = documentSnapshot.data() as ArticleDocument;","","  \/\/ get the url of the article","  const url = articleDocument.url;","","});"],"fileName":"index.ts","identifier":"chapter2-03-fetch-metadata-03.ts","type":"file","fileType":"ts","highlights":[{"line":4},{"line":5}]},"doc://com.example.firebase.workshop.ReadItLater/tutorials/ReadItLater/Chapter2-ComplexFunctions#Add-new-Articles-to-Cloud-Firestore":{"role":"pseudoSymbol","title":"Add new Articles to Cloud Firestore","abstract":[{"type":"text","text":"This tutorial guides you through a typical scenario for using "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Cloud Functions"}]},{"type":"text","text":" in a Firebase app. You will write a "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Cloud Function"}]},{"type":"text","text":" that will be run every time the user write"}],"identifier":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter2-ComplexFunctions#Add-new-Articles-to-Cloud-Firestore","kind":"section","type":"section","url":"\/tutorials\/readitlater\/chapter2-complexfunctions#Add-new-Articles-to-Cloud-Firestore"},"doc://com.example.firebase.workshop.ReadItLater/tutorials/ReadItLater/Chapter4-FirebaseExtensions#Set-Up-Email-Extension":{"role":"pseudoSymbol","title":"Set Up Email Extension","abstract":[{"type":"text","text":"Now, you want to send a weekly email reminder to your users with their articles of the week. This is a common use case that can be easily achieved with Firebase Cloud Functions. Firebase Cloud Functions provide a simple yet powerful way to set up email extensions for your application, allowing you to send emails programmatically. In this chapter, we will guide you through the process of setting up email extensions for Firebase Cloud Functions and demonstrate how to create a Pub\/Sub function to trigger email notifications. By the end of this chapter, you will have a working understanding of how to leverage Firebase Cloud Functions to send emails and create Pub\/Sub functions. So let’s dive in and learn how to set up email extensions for Firebase Cloud Functions!"}],"identifier":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter4-FirebaseExtensions#Set-Up-Email-Extension","kind":"section","type":"section","url":"\/tutorials\/readitlater\/chapter4-firebaseextensions#Set-Up-Email-Extension"},"chapter2-04-compute-reading-time-05.ts":{"syntax":"ts","content":["import * as functions from \"firebase-functions\";","import * as admin from \"firebase-admin\";","","import * as parser from \"@postlight\/mercury-parser\";","import { readingTime } from \"reading-time-estimator\";","import { stripHtml } from \"string-strip-html\";","","\/\/ ------------------ Firebase initialisation ------------------","","admin.initializeApp();","","\/\/ ------------------ Fetch readable HTML ------------------","","\/\/ define a type for the article document","interface ArticleDocument {","  author?: string;","  \/\/ dateAdded?: Timestamp;","  datePublished: string;","  excerpt?: string;","  imageUrl?: string;","  isRead?: boolean;","  notes?: string;","  siteName?: string;","  status?: string;","  title?: string;","  url: string;","  userId?: string;","  wordCount: number;","  readingTime: number;","  readableHTML: string;","}","","export const updateArticleMetadata = ","  functions","    .firestore","    .document(\"articles\/{documentId}\")","    .onCreate(async (documentSnapshot) => {","","  \/\/ cast the document snapshot to the article document type","  const articleDocument = documentSnapshot.data() as ArticleDocument;","","  \/\/ get the url of the article","  const url = articleDocument.url;","","  \/\/ parse the url using the Mercury Parser to get the metadata and readable content","  const metadata = await parser.parse(url);","","  if (!articleDocument.author && metadata.author) {","    articleDocument.author = metadata.author;","  }","","  if (!articleDocument.title && metadata.title) {","    articleDocument.title = metadata.title;","  }","","  if (!articleDocument.datePublished && metadata.date_published) {","    articleDocument.datePublished = metadata.date_published;","  }","","  if (!articleDocument.imageUrl && metadata.lead_image_url) {","    articleDocument.imageUrl = metadata.lead_image_url;","  }","","  if (!articleDocument.siteName && metadata.domain) {","    articleDocument.siteName = metadata.domain;","  }","","  if (!articleDocument.excerpt && metadata.excerpt) {","    articleDocument.excerpt = metadata.excerpt;","  }  ","","  if (!articleDocument.readableHTML && metadata.content) {","    articleDocument.readableHTML = metadata.content;","  }","","  \/\/ compute the reading time in minutes using read-time-estimate","  if (!articleDocument.readingTime && metadata.content) {","    const strippedContent = stripHtml(metadata.content).result;","","    const readTime = readingTime(strippedContent);","    articleDocument.readingTime = readTime.minutes;","","    \/\/ update the wordcount based on read-time-estimate if it is not already present or empty","    if (!articleDocument.wordCount) {","      articleDocument.wordCount = readTime.words;","    }","  }","","});"],"fileName":"index.ts","identifier":"chapter2-04-compute-reading-time-05.ts","type":"file","fileType":"ts","highlights":[{"line":81},{"line":82},{"line":83},{"line":84},{"line":85},{"line":86}]},"doc://com.example.firebase.workshop.ReadItLater/tutorials/ReadItLater/Chapter4-FirebaseExtensions#Bonus-Content-Handlebar":{"role":"pseudoSymbol","title":"Bonus Content: Handlebar","abstract":[{"type":"text","text":"Now, you want to send a weekly email reminder to your users with their articles of the week. This is a common use case that can be easily achieved with Firebase Cloud Functions. Firebase Cloud Functions provide a simple yet powerful way to set up email extensions for your application, allowing you to send emails programmatically. In this chapter, we will guide you through the process of setting up email extensions for Firebase Cloud Functions and demonstrate how to create a Pub\/Sub function to trigger email notifications. By the end of this chapter, you will have a working understanding of how to leverage Firebase Cloud Functions to send emails and create Pub\/Sub functions. So let’s dive in and learn how to set up email extensions for Firebase Cloud Functions!"}],"identifier":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter4-FirebaseExtensions#Bonus-Content-Handlebar","kind":"section","type":"section","url":"\/tutorials\/readitlater\/chapter4-firebaseextensions#Bonus-Content-Handlebar"},"doc://com.example.firebase.workshop.ReadItLater/tutorials/ReadItLater/Chapter4-FirebaseExtensions#Adding-pubsub-Functions":{"role":"pseudoSymbol","title":"Adding pub\/sub Functions","abstract":[{"type":"text","text":"Now, you want to send a weekly email reminder to your users with their articles of the week. This is a common use case that can be easily achieved with Firebase Cloud Functions. Firebase Cloud Functions provide a simple yet powerful way to set up email extensions for your application, allowing you to send emails programmatically. In this chapter, we will guide you through the process of setting up email extensions for Firebase Cloud Functions and demonstrate how to create a Pub\/Sub function to trigger email notifications. By the end of this chapter, you will have a working understanding of how to leverage Firebase Cloud Functions to send emails and create Pub\/Sub functions. So let’s dive in and learn how to set up email extensions for Firebase Cloud Functions!"}],"identifier":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter4-FirebaseExtensions#Adding-pubsub-Functions","kind":"section","type":"section","url":"\/tutorials\/readitlater\/chapter4-firebaseextensions#Adding-pubsub-Functions"},"chapter2-01-install-dependencies-01.sh":{"syntax":"","content":["$ cd functions"],"fileName":"Shell","identifier":"chapter2-01-install-dependencies-01.sh","type":"file","fileType":"","highlights":[]},"doc://com.example.firebase.workshop.ReadItLater/tutorials/SuperchargeYourAppWithCF/Building-Intelligent-Applications-with-Callable-Functions-and-OpenAI-APIs":{"role":"article","title":"Building Intelligent Applications with Callable Functions and OpenAI APIs","abstract":[],"identifier":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/SuperchargeYourAppWithCF\/Building-Intelligent-Applications-with-Callable-Functions-and-OpenAI-APIs","kind":"article","type":"topic","url":"\/tutorials\/superchargeyourappwithcf\/building-intelligent-applications-with-callable-functions-and-openai-apis"},"doc://com.example.firebase.workshop.ReadItLater/tutorials/ReadItLater/Chapter4-FirebaseExtensions":{"role":"project","title":"Use of Extensions and pub\/sub Functions","estimatedTime":"50min","abstract":[{"type":"text","text":"Now, you want to send a weekly email reminder to your users with their articles of the week. This is a common use case that can be easily achieved with Firebase Cloud Functions. Firebase Cloud Functions provide a simple yet powerful way to set up email extensions for your application, allowing you to send emails programmatically. In this chapter, we will guide you through the process of setting up email extensions for Firebase Cloud Functions and demonstrate how to create a Pub\/Sub function to trigger email notifications. By the end of this chapter, you will have a working understanding of how to leverage Firebase Cloud Functions to send emails and create Pub\/Sub functions. So let’s dive in and learn how to set up email extensions for Firebase Cloud Functions!"}],"identifier":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter4-FirebaseExtensions","kind":"project","type":"topic","url":"\/tutorials\/readitlater\/chapter4-firebaseextensions"},"doc://com.example.firebase.workshop.ReadItLater/tutorials/SuperchargeYourAppWithCF/Use-of-Extensions-and-pub/sub-Functions":{"role":"article","title":"Use of Extensions and pub\/sub Functions","abstract":[],"identifier":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/SuperchargeYourAppWithCF\/Use-of-Extensions-and-pub\/sub-Functions","kind":"article","type":"topic","url":"\/tutorials\/superchargeyourappwithcf\/use-of-extensions-and-pub\/sub-functions"},"doc://com.example.firebase.workshop.ReadItLater/tutorials/ReadItLater/Chapter2-ComplexFunctions#Wrap-Up":{"role":"pseudoSymbol","title":"Wrap Up","abstract":[{"type":"text","text":"This tutorial guides you through a typical scenario for using "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Cloud Functions"}]},{"type":"text","text":" in a Firebase app. You will write a "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Cloud Function"}]},{"type":"text","text":" that will be run every time the user write"}],"identifier":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter2-ComplexFunctions#Wrap-Up","kind":"section","type":"section","url":"\/tutorials\/readitlater\/chapter2-complexfunctions#Wrap-Up"},"doc://com.example.firebase.workshop.ReadItLater/tutorials/ReadItLater/Chapter2-ComplexFunctions#Fetch-the-Articles-Metadata-and-HTML":{"role":"pseudoSymbol","title":"Fetch the Article's Metadata and HTML","abstract":[{"type":"text","text":"This tutorial guides you through a typical scenario for using "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Cloud Functions"}]},{"type":"text","text":" in a Firebase app. You will write a "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Cloud Function"}]},{"type":"text","text":" that will be run every time the user write"}],"identifier":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter2-ComplexFunctions#Fetch-the-Articles-Metadata-and-HTML","kind":"section","type":"section","url":"\/tutorials\/readitlater\/chapter2-complexfunctions#Fetch-the-Articles-Metadata-and-HTML"},"chapter2-05-update-article-01.ts":{"syntax":"ts","content":["import * as functions from \"firebase-functions\";","import * as admin from \"firebase-admin\";","","import * as parser from \"@postlight\/mercury-parser\";","import { readingTime } from \"reading-time-estimator\";","import { stripHtml } from \"string-strip-html\";","","\/\/ ------------------ Firebase initialisation ------------------","","admin.initializeApp();","","\/\/ ------------------ Fetch readable HTML ------------------","","\/\/ define a type for the article document","interface ArticleDocument {","  author?: string;","  \/\/ dateAdded?: Timestamp;","  datePublished: string;","  excerpt?: string;","  imageUrl?: string;","  isRead?: boolean;","  notes?: string;","  siteName?: string;","  status?: string;","  title?: string;","  url: string;","  userId?: string;","  wordCount: number;","  readingTime: number;","  readableHTML: string;","}","","export const updateArticleMetadata = ","  functions","    .firestore","    .document(\"articles\/{documentId}\")","    .onCreate(async (documentSnapshot) => {","","  \/\/ cast the document snapshot to the article document type","  const articleDocument = documentSnapshot.data() as ArticleDocument;","","  \/\/ get the url of the article","  const url = articleDocument.url;","","  \/\/ parse the url using the Mercury Parser to get the metadata and readable content","  const metadata = await parser.parse(url);","","  if (!articleDocument.author && metadata.author) {","    articleDocument.author = metadata.author;","  }","","  if (!articleDocument.title && metadata.title) {","    articleDocument.title = metadata.title;","  }","","  if (!articleDocument.datePublished && metadata.date_published) {","    articleDocument.datePublished = metadata.date_published;","  }","","  if (!articleDocument.imageUrl && metadata.lead_image_url) {","    articleDocument.imageUrl = metadata.lead_image_url;","  }","","  if (!articleDocument.siteName && metadata.domain) {","    articleDocument.siteName = metadata.domain;","  }","","  if (!articleDocument.excerpt && metadata.excerpt) {","    articleDocument.excerpt = metadata.excerpt;","  }  ","","  if (!articleDocument.readableHTML && metadata.content) {","    articleDocument.readableHTML = metadata.content;","  }","","  \/\/ compute the reading time in minutes using read-time-estimate","  if (!articleDocument.readingTime && metadata.content) {","    const strippedContent = stripHtml(metadata.content).result;","","    const readTime = readingTime(strippedContent);","    articleDocument.readingTime = readTime.minutes;","","    \/\/ update the wordcount based on read-time-estimate if it is not already present or empty","    if (!articleDocument.wordCount) {","      articleDocument.wordCount = readTime.words;","    }","","    \/\/ update the document in Firestore","    return documentSnapshot.ref.set(articleDocument, {merge: true});","  }","});"],"fileName":"index.ts","identifier":"chapter2-05-update-article-01.ts","type":"file","fileType":"ts","highlights":[{"line":88},{"line":89},{"line":90}]}}}