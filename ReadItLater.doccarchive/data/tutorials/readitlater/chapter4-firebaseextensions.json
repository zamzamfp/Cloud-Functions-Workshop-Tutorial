{"variants":[{"paths":["\/tutorials\/readitlater\/chapter4-firebaseextensions"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Now, you want to send a weekly email reminder to your users with their articles of the week. This is a common use case that can be easily achieved with Firebase Cloud Functions. Firebase Cloud Functions provide a simple yet powerful way to set up email extensions for your application, allowing you to send emails programmatically. In this chapter, you will guide you through the process of setting up email extensions for Firebase Cloud Functions and demonstrate how to create a Pub\/Sub function to trigger email notifications. By the end of this chapter, you will have a working understanding of how to leverage Firebase Cloud Functions to send emails and create Pub\/Sub functions. So let’s dive in and learn how to set up email extensions for Firebase Cloud Functions!"}]}],"estimatedTimeInMinutes":40,"title":"Use of Extensions and pub sub Functions","image":"chapter4-complexApp.png","xcodeRequirement":"Xcode 14","chapter":"Firebase Extensions and Pub\/Sub Functions","kind":"hero","backgroundImage":"chapter4-complexApp.png","projectFiles":"04-use-of-extensions-and-pub-sub-functions.zip"},{"kind":"tasks","tasks":[{"anchor":"Set-Up-Email-Extension","title":"Set Up Email Extension","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Firebase Extensions help you deploy functionality to your app quickly with pre-packaged solutions."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Once installed, a Firebase Extension performs a specific task or set of tasks in response to HTTPS requests, Cloud Scheduler events, or to triggering events from other Firebase products, like Cloud Firestore or Firebase Cloud Messaging."}]}],"mediaPosition":"trailing","media":"outline-puzzlepiece.extension.png"}],"stepsSection":[{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Open "},{"type":"reference","isActive":true,"identifier":"https:\/\/extensions.dev\/extensions\/firebase\/firestore-send-email"},{"type":"text","text":". Here you get an overview of this extension and how it works."},{"type":"text","text":" "},{"type":"text","text":"Click on "},{"type":"strong","inlineContent":[{"type":"text","text":"Install in Firebase console"}]},{"type":"text","text":" button."}]}],"caption":[],"type":"step","runtimePreview":null,"media":"chapter4-installingEmailExtension-00.png"},{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"By clicking "},{"type":"strong","inlineContent":[{"type":"text","text":"Install in Firebase console"}]},{"type":"text","text":" you will be taken to your Firebase console to choose which project you want to add this extension to. Select the project you created earlier."}]}],"caption":[],"type":"step","runtimePreview":null,"media":"chapter4-firebaseConsole.png"},{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Follow the steps to install the Email extension."}]}],"caption":[],"type":"step","runtimePreview":null,"media":"chapter4-installingEmailExtension-01.png"},{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"You might need to enable extra things to make sure the extension works."}]}],"caption":[],"type":"step","runtimePreview":null,"media":"chapter4-installingEmailExtension-02.png"},{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Now you need to configure the extension. Select the location for Cloud Functions. Remember that you can not change the location later."}]}],"caption":[],"type":"step","runtimePreview":null,"media":"chapter4-installingEmailExtension-03.png"},{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Fill the "},{"type":"strong","inlineContent":[{"type":"text","text":"SMTP connection URI"}]},{"type":"text","text":" with the following "},{"type":"codeVoice","code":"smtps:\/\/superchargemobileapps@gmail.com@smtp.gmail.com:465"},{"type":"text","text":" You can change this to your preferred STMP server."},{"type":"text","text":" "},{"type":"text","text":"Also scan the QR code from the slide to get the App Password and add it in the place of "},{"type":"strong","inlineContent":[{"type":"text","text":"SMTP password"}]},{"type":"text","text":" "},{"type":"text","text":"If you want to use your own email account you need to create an "},{"type":"strong","inlineContent":[{"type":"text","text":"App Password"}]},{"type":"text","text":" From you google account and add that here."}]}],"caption":[],"type":"step","runtimePreview":null,"media":"chapter4-installingEmailExtension-04.png"},{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Fill in the "},{"type":"strong","inlineContent":[{"type":"text","text":"Default FROM address"}]},{"type":"text","text":" with "},{"type":"codeVoice","code":"Hello From Firebase Workshop <superchargemobileapps@gmail.com>"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Fill in the "},{"type":"strong","inlineContent":[{"type":"text","text":"Default REPLY-TO address"}]},{"type":"text","text":" with "},{"type":"codeVoice","code":"superchargemobileapps@gmail.com"},{"type":"text","text":". Leave the rest to be as they are. Press "},{"type":"strong","inlineContent":[{"type":"text","text":"Install Extension"}]},{"type":"text","text":" at the bottom."}]}],"caption":[],"type":"step","runtimePreview":null,"media":"chapter4-installingEmailExtension-05.png"},{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Wait for the extension to be installed."}]}],"caption":[],"type":"step","runtimePreview":null,"media":"chapter4-installingEmailExtension-06.png"},{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"After it has been installed click on the right arrow "},{"type":"strong","inlineContent":[{"type":"text","text":"Manage"}]}]}],"caption":[],"type":"step","runtimePreview":null,"media":"chapter4-installingEmailExtension-07.png"},{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Navigate to "},{"type":"strong","inlineContent":[{"type":"text","text":"How this extension works"}]},{"type":"text","text":" and follow the steps to test it from the Firebase console."}]}],"caption":[],"type":"step","runtimePreview":null,"media":"chapter4-installingEmailExtension-08.png"},{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Navigate to "},{"type":"strong","inlineContent":[{"type":"text","text":"Firestore Database"}]},{"type":"text","text":" tab and create a "},{"type":"strong","inlineContent":[{"type":"text","text":"mail"}]},{"type":"text","text":" collection. Then create a new document with the following format."}]}],"caption":[],"type":"step","runtimePreview":null,"media":"chapter4-installingEmailExtension-09.png"},{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"By pressing save and waiting for a few seconds your document should look like this."}]}],"caption":[],"type":"step","runtimePreview":null,"media":"chapter4-installingEmailExtension-10.png"},{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Now lets test this locally. Navigate to your "},{"type":"strong","inlineContent":[{"type":"text","text":"functions"}]},{"type":"text","text":" folder in "},{"type":"strong","inlineContent":[{"type":"text","text":"Visual Studio Code"}]},{"type":"text","text":". Run "},{"type":"codeVoice","code":"npm run serve"},{"type":"text","text":". When the emulators start navigate to emulator UI, and select "},{"type":"strong","inlineContent":[{"type":"text","text":"Extension"}]}]}],"caption":[],"type":"step","runtimePreview":null,"media":"chapter4-installingEmailExtension-11.png"},{"code":"chapter4-exportFirebaseExtensions.sh","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"As you can see the Email extension does not show up here. Run the following command to export the extensions instances from your production project."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"When asked the following select "},{"type":"codeVoice","code":"yes"},{"type":"text","text":". Then you will see that the "},{"type":"codeVoice","code":"extensions"},{"type":"text","text":" folder is added to your project including "},{"type":"codeVoice","code":"firestore-send-email.env"},{"type":"text","text":" file."}]}],"caption":[],"type":"step","runtimePreview":null,"media":"chapter4-installingEmailExtension-12.png"},{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Now run "},{"type":"codeVoice","code":"npm run serve"},{"type":"text","text":" agian and you should see the following in the console."}]}],"caption":[],"type":"step","runtimePreview":null,"media":"chapter4-installingEmailExtension-13.png"},{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"You can check out the Firebase Emulator as well and in the "},{"type":"strong","inlineContent":[{"type":"text","text":"Extensions"}]},{"type":"text","text":" tab you should see the Email extension."},{"type":"text","text":" "},{"type":"text","text":"You can test it the same way you tested it on Firebase console."}]}],"caption":[],"type":"step","runtimePreview":null,"media":"chapter4-installingEmailExtension-14.png"}]},{"anchor":"Adding-pubsub-Functions","title":"Adding pub\/sub Functions","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Google Cloud’s Pub\/Sub is a globally distributed message bus that automatically scales as you need it. You can create a function that handles Pub\/Sub events by using functions.pubsub. Learn more "},{"type":"reference","isActive":true,"identifier":"https:\/\/firebase.google.com\/docs\/functions\/pubsub-events"},{"type":"text","text":". In this section you’ll learn how to send scheduled emails with a summary of user’s articles."}]}],"mediaPosition":"trailing","media":"chapter4-clock.png"}],"stepsSection":[{"code":"chapter4-index-01.ts","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Navigate to your "},{"type":"codeVoice","code":"functions\/src\/index.ts"},{"type":"text","text":" file in "},{"type":"codeVoice","code":"Visual Studio Code"},{"type":"text","text":", and start coding the pub\/sub function ⏰"},{"type":"text","text":" "},{"type":"text","text":"Add the code to create a schedule function that runs every two minutes. For the sake of this tutorial you are using two minutes to be able to test it easier. Checkout "},{"type":"reference","isActive":true,"identifier":"https:\/\/cloud.google.com\/appengine\/docs\/legacy\/standard\/python\/config\/cronref"},{"type":"text","text":" to see how you can set different schedules."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"chapter4-index-02.ts","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Now you need to get the reference to "},{"type":"codeVoice","code":"articles"},{"type":"text","text":" and "},{"type":"codeVoice","code":"mail"},{"type":"text","text":" collections."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"chapter4-index-03.ts","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In order to send emails to each user, first you need to get the "},{"type":"codeVoice","code":"articles"},{"type":"text","text":" that have a not nil "},{"type":"codeVoice","code":"userId"},{"type":"text","text":"."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"chapter4-index-04.ts","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Now you need to group the articles based on "},{"type":"codeVoice","code":"userId"},{"type":"text","text":"s."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"chapter4-index-05.ts","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Now that you have grouped the articles based on userIds, you need to go through each user and create a mail document for that user. By adding a document to the "},{"type":"codeVoice","code":"mail"},{"type":"text","text":" collection as you know it will trigger the email extension and send the email to each user with their list of the document. Also add the "},{"type":"codeVoice","code":"generateMessageHtml"},{"type":"text","text":" function at the bottom of the file. What it does is that it will make an email template which includes a snapshot of user’s articles."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"chapter4-index-06.ts","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"You can see the complete code of this part here."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"chapter1-deploy.sh","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If you run "},{"type":"codeVoice","code":"npm run serve"},{"type":"text","text":" the schedule functions don’t work, eventhough it says the emulator is on."},{"type":"text","text":" "},{"type":"text","text":"Now to test it you need to deploy your functions."},{"type":"text","text":" "},{"type":"text","text":"Run this line to deploy your functions again."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Now start your app pointing to the production project, then login, add articles and summarize them. Wait for two minutes to get your email 🔥"}]}],"caption":[],"type":"step","runtimePreview":null,"media":"chapter4-everythingComesTogether.png"}]},{"anchor":"Bonus-Content-Handlebar","title":"Bonus Content: Handlebar","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"You can specify a “Templates collection” parameter during configuration of the extension, you can create and manage "},{"type":"reference","isActive":true,"identifier":"https:\/\/handlebarsjs.com"},{"type":"text","text":" templates for your emails."}]}],"mediaPosition":"trailing","media":"chapter4-doc.png"}],"stepsSection":[{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Now instead of using this function "},{"type":"codeVoice","code":"generateMessageHtml()"},{"type":"text","text":" let’s use a handlebar templates to give a template to our mail. In order to do that you need to first mark this in your email extension configuration. Navigation to the "},{"type":"strong","inlineContent":[{"type":"text","text":"Extensions"}]},{"type":"text","text":" tab in the Firebase console. Then select the "},{"type":"strong","inlineContent":[{"type":"text","text":"Extension configuration"}]},{"type":"text","text":". Then add "},{"type":"codeVoice","code":"handlebar"},{"type":"text","text":" to the "},{"type":"strong","inlineContent":[{"type":"text","text":"Templates collection"}]},{"type":"text","text":". Save and wait for it to save the changes."}]}],"caption":[],"type":"step","runtimePreview":null,"media":"chapter4-installingEmailExtension-15.png"},{"code":"chapter4-exportFirebaseExtensions.sh","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"At this point you are saying that the template that should be used is inside handlebar collection. Now go back to your "},{"type":"codeVoice","code":"Visual Studio Code"},{"type":"text","text":" and run this command again to fetch the changes."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"chapter4-index-07.ts","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Go back to the part of the code where you made the mail document and replace that "},{"type":"codeVoice","code":"for"},{"type":"text","text":" with the following and remove "},{"type":"codeVoice","code":"generateMessageHtml()"},{"type":"text","text":" function. What you are doing here is that you are using a template with the name "},{"type":"codeVoice","code":"sendingArticles"},{"type":"text","text":" and it needs a "},{"type":"codeVoice","code":"data"},{"type":"text","text":" object which includes "},{"type":"codeVoice","code":"username"},{"type":"text","text":" and an array of "},{"type":"codeVoice","code":"aricles"}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"html","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Now run your project using "},{"type":"codeVoice","code":"npm run serve"},{"type":"text","text":" and go to your Firebae Eumulator UI. Navigate to the "},{"type":"codeVoice","code":"Firestore"},{"type":"text","text":" tab and create "},{"type":"codeVoice","code":"handlebar"},{"type":"text","text":" collection. In this collection create a document with this name "},{"type":"codeVoice","code":"sendingArticles"},{"type":"text","text":". This article needs to have a "},{"type":"codeVoice","code":"subject"},{"type":"text","text":" field with the following format "},{"type":"strong","inlineContent":[{"type":"text","text":"Hi, here are your article(s)"}]},{"type":"text","text":" and the "},{"type":"codeVoice","code":"html"},{"type":"text","text":" field with the following code."}]}],"caption":[],"type":"step","runtimePreview":"chapter4-installingEmailExtension-16.png","media":null},{"code":"html","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"From now on for mails that are added for each of your users to the "},{"type":"codeVoice","code":"mail"},{"type":"text","text":" collection, when sent via email they will have the format you inserted in the "},{"type":"codeVoice","code":"handlebar\/sendingArticles"},{"type":"text","text":" document."}]}],"caption":[],"type":"step","runtimePreview":"chapter4-installingEmailExtension-16.png","media":null}]}]}],"identifier":{"url":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter4-FirebaseExtensions","interfaceLanguage":"swift"},"kind":"project","metadata":{"title":"Use of Extensions and pub sub Functions","categoryPathComponent":"SuperchargeYourAppWithCF","role":"project","category":"Supercharge your mobile apps with Cloud Functions for Firebase"},"hierarchy":{"modules":[{"reference":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/SuperchargeYourAppWithCF\/Getting-Started-with-Cloud-Functions","projects":[{"reference":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter1-SimpleFunctions","sections":[{"kind":"task","reference":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter1-SimpleFunctions#Set-up-a-Firebase-project"},{"kind":"task","reference":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter1-SimpleFunctions#Install-the-Firebase-CLI"},{"kind":"task","reference":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter1-SimpleFunctions#Deploy-and-test-your-Cloud-Functions"},{"kind":"task","reference":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter1-SimpleFunctions#Exercise-Create-a-Cloud-Function-to-greet-the-user"},{"kind":"task","reference":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter1-SimpleFunctions#Connect-your-iOS-Android-app-to-Firebase"},{"kind":"task","reference":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter1-SimpleFunctions#Call-the-greetUser-from-your-iOS-App"},{"kind":"task","reference":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter1-SimpleFunctions#Call-the-greetUser-from-your-Android-App"},{"kind":"task","reference":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter1-SimpleFunctions#Run-Cloud-Functions-locally-using-the-Firebase-Emulator-Suite"},{"kind":"task","reference":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter1-SimpleFunctions#Update-your-iOS-app-to-use-the-Firebase-Emulator"},{"kind":"task","reference":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter1-SimpleFunctions#Update-your-Android-app-to-use-the-Firebase-Emulator"}]}]},{"reference":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/SuperchargeYourAppWithCF\/Cloud-Firestore-Triggers","projects":[{"reference":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter2-ComplexFunctions","sections":[{"kind":"task","reference":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter2-ComplexFunctions#Add-new-Articles-to-Cloud-Firestore-iOS"},{"kind":"task","reference":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter2-ComplexFunctions#Add-new-Articles-to-Cloud-Firestore-Android"},{"kind":"task","reference":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter2-ComplexFunctions#Implement-a-Cloud-Firestore-Trigger"},{"kind":"task","reference":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter2-ComplexFunctions#Fetch-the-Articles-Metadata-and-HTML"},{"kind":"task","reference":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter2-ComplexFunctions#Compute-the-Reading-Time"},{"kind":"task","reference":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter2-ComplexFunctions#Update-the-Article-in-Cloud-Firestore"},{"kind":"task","reference":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter2-ComplexFunctions#Wrap-Up"}]}]},{"reference":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/SuperchargeYourAppWithCF\/Building-intelligent-applications-with-Callable-Functions-and-OpenAI-APIs","projects":[{"reference":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter3-CallableFunctions","sections":[{"kind":"task","reference":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter3-CallableFunctions#Callable-Functions"},{"kind":"task","reference":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter3-CallableFunctions#Call-Callable-Functions-From-iOS"},{"kind":"task","reference":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter3-CallableFunctions#Call-Callable-Functions-From-Android"},{"kind":"task","reference":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter3-CallableFunctions#Have-Some-Fun-With-OpenAI"}]}]},{"reference":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/SuperchargeYourAppWithCF\/Firebase-Extensions-and-Pub\/Sub-Functions","projects":[{"reference":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter4-FirebaseExtensions","sections":[{"kind":"task","reference":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter4-FirebaseExtensions#Set-Up-Email-Extension"},{"kind":"task","reference":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter4-FirebaseExtensions#Adding-pubsub-Functions"},{"kind":"task","reference":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter4-FirebaseExtensions#Bonus-Content-Handlebar"}]}]}],"reference":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/SuperchargeYourAppWithCF","paths":[["doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/SuperchargeYourAppWithCF","doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/SuperchargeYourAppWithCF\/$volume","doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/SuperchargeYourAppWithCF\/Firebase-Extensions-and-Pub\/Sub-Functions"]]},"references":{"chapter4-index-07.ts":{"syntax":"ts","content":["\/\/ TODO: (1) Add the scheduleMailSending functions that runs every two minutes","export const scheduleMailSending = functions.pubsub.schedule('every 2 minutes').onRun(async (context) => {","","  \/\/ TODO: (2) Get the articles and and mail collections reference","  const articlesRef = admin.firestore().collection('articles');","  const mailRef = admin.firestore().collection('mail');","","  \/\/ TODO: (3) Get the articles that have a not nil userId","  const articlesSnapshot = await articlesRef.where('userId', '!=', '').get();","","  \/\/ TODO: (4) Group the articles based on userIds, hint: you can use ArticlesByUserId that is defined above this function ","  const articlesByUserId = {} as ArticlesByUserId;","  articlesSnapshot.forEach((doc) => {","    const article = doc.data() as ArticleDocument;","    const userId = doc.data().userId;","    if (!articlesByUserId[userId]) {","      articlesByUserId[userId] = [];","    }","    articlesByUserId[userId].push(article);","  });","","  \/\/ Now that you have grouped the articles based on userIds, ","  \/\/ you need to go through each user and create a mail document for that user. ","  \/\/ You need to add the mails to the mail collection","  const userIds = Object.keys(articlesByUserId);","  for (let i = 0; i < userIds.length; i++) {","    const userId = userIds[i];","    const articles = articlesByUserId[userId];","","    \/\/ Check if the user already has a document in the mail collection","    const userMailSnapshot = await mailRef.where('userId', '==', userId).get();","","    \/\/ Only add the mail document if the user doesn't have a mail already","    if (userMailSnapshot.empty) {","","      const userSnapshot = await admin.auth().getUser(userId);","","      const email = userSnapshot.email;","","      \/\/ Using handlebar for formatting emails","      const mailDoc = {","        template: {","          name: \"sendingArticles\",","          data: {","            username: userName,","            articles: articles,","          },","        },","        to: [email]","      };","","      await mailRef.add(mailDoc);","    }","  }","});"],"fileName":"index.ts","identifier":"chapter4-index-07.ts","type":"file","fileType":"ts","highlights":[]},"chapter4-exportFirebaseExtensions.sh":{"syntax":"sh","content":["# Run the following command to get the `id` of your project","$ firebase use","","# Run the following command to export the Firebase Extension","$ firebase ext:export --project=you-project-id"],"fileName":"exportFirebaseExtensions.sh","identifier":"chapter4-exportFirebaseExtensions.sh","type":"file","fileType":"sh","highlights":[]},"doc://com.example.firebase.workshop.ReadItLater/tutorials/ReadItLater/Chapter3-CallableFunctions#Call-Callable-Functions-From-iOS":{"role":"pseudoSymbol","title":"Call Callable Functions From iOS","abstract":[{"type":"text","text":"This article explains how to build intelligent applications using OpenAI APIs and callable functions. It discusses the benefits of using callable functions, provides a step-by-step guide to building callable functions that utilize OpenAI’s APIs, and demonstrates how to use OpenAI to summarize a URL through a callable function. This chapter also covers authentication for access to callable functions and provides information on how to use the summarization function in mobile apps. By the end of the chapter, readers will be able to create their own callable function that calls OpenAI APIs and use the summarization function in mobile apps."}],"identifier":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter3-CallableFunctions#Call-Callable-Functions-From-iOS","kind":"section","type":"section","url":"\/tutorials\/readitlater\/chapter3-callablefunctions#Call-Callable-Functions-From-iOS"},"chapter4-index-01.ts":{"syntax":"ts","content":["\/\/ TODO: (1) Add the scheduleMailSending functions that runs every two minutes","    "],"fileName":"index.ts","identifier":"chapter4-index-01.ts","type":"file","fileType":"ts","highlights":[]},"chapter4-installingEmailExtension-04.png":{"alt":"Installing Email Extension","type":"image","identifier":"chapter4-installingEmailExtension-04.png","variants":[{"url":"\/images\/chapter4-installingEmailExtension-04.png","traits":["1x","light"]}]},"chapter4-index-06.ts":{"syntax":"ts","content":["\/\/ TODO: (1) Add the scheduleMailSending functions that runs every two minutes","export const scheduleMailSending = functions.pubsub.schedule('every 2 minutes').onRun(async (context) => {","        ","    \/\/ TODO: (2) Get the articles and and mail collections reference","    const articlesRef = admin.firestore().collection('articles');","    const mailRef = admin.firestore().collection('mail');","   ","    \/\/ TODO: (3) Get the articles that have a not nil userId","    const articlesSnapshot = await articlesRef.where('userId', '!=', '').get();","","    \/\/ TODO: (4) Group the articles based on userIds, hint: you can use ArticlesByUserId that is defined outside this function ","    const articlesByUserId = {} as ArticlesByUserId;","    articlesSnapshot.forEach((doc) => {","        const article = doc.data() as ArticleDocument;","        const userId = doc.data().userId;","        if (!articlesByUserId[userId]) {","            articlesByUserId[userId] = [];","        }","        articlesByUserId[userId].push(article);","    });","","    \/\/ Now that you have grouped the articles based on userIds, ","    \/\/ you need to go through each user and create a mail document for that user. ","    \/\/ You need to add the mails to the mail collection","    const userIds = Object.keys(articlesByUserId);","    for (let i = 0; i < userIds.length; i++) {","        const userId = userIds[i];","        const articles = articlesByUserId[userId];","        ","        \/\/ Check if the user already has a document in the mail collection","        const userMailSnapshot = await mailRef.where('userId', '==', userId).get();","","        \/\/ Only add the mail document if the user doesn't have a mail already","        if (userMailSnapshot.empty) {","","            const userSnapshot = await admin.auth().getUser(userId);","","            const email = userSnapshot.email;","","            \/\/ TODO: (5) Create the mailDoc, use the generateMessageHtml for styling your mail html part","            const mailDoc = {","                userId: userId,","                articles: articles,","                message: {","                subject: 'Hello from Firebase!',","                html: generateMessageHtml(articles),","                },","                to: [email],","                userId: userId","                };","","            await mailRef.add(mailDoc);","        }","    }","});","","\/\/ TODO: (7) Add this function to your file that generates the email template to contain some info from each article, use this in you mailDoc","function generateMessageHtml(articles: ArticleDocument[]): string {","    let messageHtml = '<div style=\"font-family: Arial, sans-serif; font-size: 16px; line-height: 1.5; color: #333;\">';","    messageHtml += '<h2 style=\"font-size: 24px; font-weight: bold; margin-bottom: 20px;\">Here is an overview of your saved articles:<\/h2>';","    messageHtml += '<div style=\"display: flex; flex-wrap: wrap; justify-content: center;\">';","    for (const article of articles) {","        messageHtml += `","        <div style=\"margin: 20px; padding: 20px; background-color: #fff; box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); border-radius: 8px; width: 100%; display: flex; align-items: center;\">","        <img src=\"${article.imageUrl}\" alt=\"${article.title}\" style=\"max-width: 80px; max-height: 80px; margin-right: 20px; object-fit: contain;\">","        <div>","        <h3 style=\"font-size: 20px; font-weight: bold; margin: 0 0 10px;\">${article.title}<\/h3>","        <p style=\"font-size: 16px; margin: 0 0 10px;\">","        <a href=\"${article.url}\" target=\"_blank\" style=\"color: #333; text-decoration: none;\">${article.siteName}<\/a>","        <\/p>","        <\/div>","        <\/div>","        <br>","        `;","    }","    messageHtml += '<\/div>';","    messageHtml += '<\/div>';","    return messageHtml;","}"],"fileName":"index.ts","identifier":"chapter4-index-06.ts","type":"file","fileType":"ts","highlights":[{"line":41},{"line":42},{"line":43},{"line":44},{"line":45},{"line":46},{"line":47},{"line":48},{"line":49},{"line":50}]},"doc://com.example.firebase.workshop.ReadItLater/tutorials/ReadItLater/Chapter2-ComplexFunctions#Update-the-Article-in-Cloud-Firestore":{"role":"pseudoSymbol","title":"Update the Article in Cloud Firestore","abstract":[{"type":"text","text":"This tutorial guides you through a typical scenario for using "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Cloud Functions"}]},{"type":"text","text":" in a Firebase app. You will write a "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Cloud Function"}]},{"type":"text","text":" that will be run every time the user adds a new document to Cloud Firestore. This is called a "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Cloud Function Trigger"}]},{"type":"text","text":"."}],"identifier":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter2-ComplexFunctions#Update-the-Article-in-Cloud-Firestore","kind":"section","type":"section","url":"\/tutorials\/readitlater\/chapter2-complexfunctions#Update-the-Article-in-Cloud-Firestore"},"doc://com.example.firebase.workshop.ReadItLater/tutorials/ReadItLater/Chapter4-FirebaseExtensions#Set-Up-Email-Extension":{"role":"pseudoSymbol","title":"Set Up Email Extension","abstract":[{"type":"text","text":"Now, you want to send a weekly email reminder to your users with their articles of the week. This is a common use case that can be easily achieved with Firebase Cloud Functions. Firebase Cloud Functions provide a simple yet powerful way to set up email extensions for your application, allowing you to send emails programmatically. In this chapter, you will guide you through the process of setting up email extensions for Firebase Cloud Functions and demonstrate how to create a Pub\/Sub function to trigger email notifications. By the end of this chapter, you will have a working understanding of how to leverage Firebase Cloud Functions to send emails and create Pub\/Sub functions. So let’s dive in and learn how to set up email extensions for Firebase Cloud Functions!"}],"identifier":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter4-FirebaseExtensions#Set-Up-Email-Extension","kind":"section","type":"section","url":"\/tutorials\/readitlater\/chapter4-firebaseextensions#Set-Up-Email-Extension"},"doc://com.example.firebase.workshop.ReadItLater/tutorials/ReadItLater/Chapter3-CallableFunctions#Call-Callable-Functions-From-Android":{"role":"pseudoSymbol","title":"Call Callable Functions From Android","abstract":[{"type":"text","text":"This article explains how to build intelligent applications using OpenAI APIs and callable functions. It discusses the benefits of using callable functions, provides a step-by-step guide to building callable functions that utilize OpenAI’s APIs, and demonstrates how to use OpenAI to summarize a URL through a callable function. This chapter also covers authentication for access to callable functions and provides information on how to use the summarization function in mobile apps. By the end of the chapter, readers will be able to create their own callable function that calls OpenAI APIs and use the summarization function in mobile apps."}],"identifier":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter3-CallableFunctions#Call-Callable-Functions-From-Android","kind":"section","type":"section","url":"\/tutorials\/readitlater\/chapter3-callablefunctions#Call-Callable-Functions-From-Android"},"https://handlebarsjs.com":{"title":"Handlebars templates","titleInlineContent":[{"type":"text","text":"Handlebars templates"}],"type":"link","identifier":"https:\/\/handlebarsjs.com","url":"https:\/\/handlebarsjs.com"},"doc://com.example.firebase.workshop.ReadItLater/tutorials/SuperchargeYourAppWithCF/Cloud-Firestore-Triggers":{"role":"article","title":"Cloud Firestore Triggers","abstract":[],"identifier":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/SuperchargeYourAppWithCF\/Cloud-Firestore-Triggers","kind":"article","type":"topic","url":"\/tutorials\/superchargeyourappwithcf\/cloud-firestore-triggers"},"chapter4-installingEmailExtension-01.png":{"alt":"Installing Email Extension","type":"image","identifier":"chapter4-installingEmailExtension-01.png","variants":[{"url":"\/images\/chapter4-installingEmailExtension-01.png","traits":["1x","light"]}]},"doc://com.example.firebase.workshop.ReadItLater/tutorials/ReadItLater/Chapter3-CallableFunctions#Have-Some-Fun-With-OpenAI":{"role":"pseudoSymbol","title":"Have Some Fun With OpenAI","abstract":[{"type":"text","text":"This article explains how to build intelligent applications using OpenAI APIs and callable functions. It discusses the benefits of using callable functions, provides a step-by-step guide to building callable functions that utilize OpenAI’s APIs, and demonstrates how to use OpenAI to summarize a URL through a callable function. This chapter also covers authentication for access to callable functions and provides information on how to use the summarization function in mobile apps. By the end of the chapter, readers will be able to create their own callable function that calls OpenAI APIs and use the summarization function in mobile apps."}],"identifier":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter3-CallableFunctions#Have-Some-Fun-With-OpenAI","kind":"section","type":"section","url":"\/tutorials\/readitlater\/chapter3-callablefunctions#Have-Some-Fun-With-OpenAI"},"chapter4-installingEmailExtension-07.png":{"alt":"Installing Email Extension","type":"image","identifier":"chapter4-installingEmailExtension-07.png","variants":[{"url":"\/images\/chapter4-installingEmailExtension-07.png","traits":["1x","light"]}]},"doc://com.example.firebase.workshop.ReadItLater/tutorials/ReadItLater/Chapter3-CallableFunctions":{"role":"project","title":"Building Intelligent Applications with Callable Functions and OpenAI APIs","estimatedTime":"50min","abstract":[{"type":"text","text":"This article explains how to build intelligent applications using OpenAI APIs and callable functions. It discusses the benefits of using callable functions, provides a step-by-step guide to building callable functions that utilize OpenAI’s APIs, and demonstrates how to use OpenAI to summarize a URL through a callable function. This chapter also covers authentication for access to callable functions and provides information on how to use the summarization function in mobile apps. By the end of the chapter, readers will be able to create their own callable function that calls OpenAI APIs and use the summarization function in mobile apps."}],"identifier":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter3-CallableFunctions","kind":"project","type":"topic","url":"\/tutorials\/readitlater\/chapter3-callablefunctions"},"chapter4-installingEmailExtension-14.png":{"alt":"Installing Email Extension","type":"image","identifier":"chapter4-installingEmailExtension-14.png","variants":[{"url":"\/images\/chapter4-installingEmailExtension-14.png","traits":["1x","light"]}]},"chapter4-installingEmailExtension-11.png":{"alt":"Installing Email Extension","type":"image","identifier":"chapter4-installingEmailExtension-11.png","variants":[{"url":"\/images\/chapter4-installingEmailExtension-11.png","traits":["1x","light"]}]},"chapter4-installingEmailExtension-15.png":{"alt":"Handlebar","type":"image","identifier":"chapter4-installingEmailExtension-15.png","variants":[{"url":"\/images\/chapter4-installingEmailExtension-15.png","traits":["1x","light"]}]},"chapter4-index-05.ts":{"syntax":"ts","content":["\/\/ TODO: (1) Add the scheduleMailSending functions that runs every two minutes","export const scheduleMailSending = functions.pubsub.schedule('every 2 minutes').onRun(async (context) => {","        ","    \/\/ TODO: (2) Get the articles and and mail collections reference","    const articlesRef = admin.firestore().collection('articles');","    const mailRef = admin.firestore().collection('mail');","   ","    \/\/ TODO: (3) Get the articles that have a not nil userId","    const articlesSnapshot = await articlesRef.where('userId', '!=', '').get();","","    \/\/ TODO: (4) Group the articles based on userIds, hint: you can use ArticlesByUserId that is defined outside this function ","    const articlesByUserId = {} as ArticlesByUserId;","    articlesSnapshot.forEach((doc) => {","        const article = doc.data() as ArticleDocument;","        const userId = doc.data().userId;","        if (!articlesByUserId[userId]) {","            articlesByUserId[userId] = [];","        }","        articlesByUserId[userId].push(article);","    });","","    \/\/ Now that you have grouped the articles based on userIds, ","    \/\/ you need to go through each user and create a mail document for that user. ","    \/\/ You need to add the mails to the mail collection","    const userIds = Object.keys(articlesByUserId);","    for (let i = 0; i < userIds.length; i++) {","        const userId = userIds[i];","        const articles = articlesByUserId[userId];","        ","        \/\/ Check if the user already has a document in the mail collection","        const userMailSnapshot = await mailRef.where('userId', '==', userId).get();","","        \/\/ Only add the mail document if the user doesn't have a mail already","        if (userMailSnapshot.empty) {","","            const userSnapshot = await admin.auth().getUser(userId);","","            const email = userSnapshot.email;","","            \/\/ TODO: (5) Create the mailDoc, use the generateMessageHtml for styling your mail html part","","            await mailRef.add(mailDoc);","        }","    }","});","","\/\/ TODO: (7) Add this function to your file that generates the email template to contain some info from each article, use this in you mailDoc","function generateMessageHtml(articles: ArticleDocument[]): string {","    let messageHtml = '<div style=\"font-family: Arial, sans-serif; font-size: 16px; line-height: 1.5; color: #333;\">';","    messageHtml += '<h2 style=\"font-size: 24px; font-weight: bold; margin-bottom: 20px;\">Here is an overview of your saved articles:<\/h2>';","    messageHtml += '<div style=\"display: flex; flex-wrap: wrap; justify-content: center;\">';","    for (const article of articles) {","        messageHtml += `","        <div style=\"margin: 20px; padding: 20px; background-color: #fff; box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); border-radius: 8px; width: 100%; display: flex; align-items: center;\">","        <img src=\"${article.imageUrl}\" alt=\"${article.title}\" style=\"max-width: 80px; max-height: 80px; margin-right: 20px; object-fit: contain;\">","        <div>","        <h3 style=\"font-size: 20px; font-weight: bold; margin: 0 0 10px;\">${article.title}<\/h3>","        <p style=\"font-size: 16px; margin: 0 0 10px;\">","        <a href=\"${article.url}\" target=\"_blank\" style=\"color: #333; text-decoration: none;\">${article.siteName}<\/a>","        <\/p>","        <\/div>","        <\/div>","        <br>","        `;","    }","    messageHtml += '<\/div>';","    messageHtml += '<\/div>';","    return messageHtml;","}"],"fileName":"index.ts","identifier":"chapter4-index-05.ts","type":"file","fileType":"ts","highlights":[{"line":12},{"line":13},{"line":14},{"line":15},{"line":16},{"line":17},{"line":18},{"line":19},{"line":20},{"line":22},{"line":23},{"line":24},{"line":25},{"line":26},{"line":27},{"line":28},{"line":29},{"line":30},{"line":31},{"line":32},{"line":33},{"line":34},{"line":35},{"line":36},{"line":37},{"line":38},{"line":39},{"line":40},{"line":41},{"line":42},{"line":43},{"line":44},{"line":47},{"line":48},{"line":49},{"line":50},{"line":51},{"line":52},{"line":53},{"line":54},{"line":55},{"line":56},{"line":57},{"line":58},{"line":59},{"line":60},{"line":61},{"line":62},{"line":63},{"line":64},{"line":65},{"line":66},{"line":67},{"line":68}]},"doc://com.example.firebase.workshop.ReadItLater/tutorials/ReadItLater/Chapter2-ComplexFunctions#Wrap-Up":{"role":"pseudoSymbol","title":"Wrap Up","abstract":[{"type":"text","text":"This tutorial guides you through a typical scenario for using "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Cloud Functions"}]},{"type":"text","text":" in a Firebase app. You will write a "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Cloud Function"}]},{"type":"text","text":" that will be run every time the user adds a new document to Cloud Firestore. This is called a "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Cloud Function Trigger"}]},{"type":"text","text":"."}],"identifier":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter2-ComplexFunctions#Wrap-Up","kind":"section","type":"section","url":"\/tutorials\/readitlater\/chapter2-complexfunctions#Wrap-Up"},"chapter4-installingEmailExtension-16.png":{"alt":"Handlebar","type":"image","identifier":"chapter4-installingEmailExtension-16.png","variants":[{"url":"\/images\/chapter4-installingEmailExtension-16.png","traits":["1x","light"]}]},"chapter4-doc.png":{"alt":"Handlebar Templates","type":"image","identifier":"chapter4-doc.png","variants":[{"url":"\/images\/chapter4-doc.png","traits":["1x","light"]}]},"chapter4-installingEmailExtension-13.png":{"alt":"Installing Email Extension","type":"image","identifier":"chapter4-installingEmailExtension-13.png","variants":[{"url":"\/images\/chapter4-installingEmailExtension-13.png","traits":["1x","light"]}]},"https://firebase.google.com/docs/functions/pubsub-events":{"title":"here","titleInlineContent":[{"type":"text","text":"here"}],"type":"link","identifier":"https:\/\/firebase.google.com\/docs\/functions\/pubsub-events","url":"https:\/\/firebase.google.com\/docs\/functions\/pubsub-events"},"doc://com.example.firebase.workshop.ReadItLater/tutorials/ReadItLater/Chapter1-SimpleFunctions#Call-the-greetUser-from-your-Android-App":{"role":"pseudoSymbol","title":"Call the greetUser from your Android App","abstract":[{"type":"text","text":"This part of the tutorial will guide you through setting up a Firebase project for your Cloud Functions, creating your first Cloud Functions, and calling them via HTTP requests from the command line and a mobile app (iOS \/ Android). You will also learn how to use the Firebase Emulator Suite to run and test your Cloud Functions locally."}],"identifier":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter1-SimpleFunctions#Call-the-greetUser-from-your-Android-App","kind":"section","type":"section","url":"\/tutorials\/readitlater\/chapter1-simplefunctions#Call-the-greetUser-from-your-Android-App"},"doc://com.example.firebase.workshop.ReadItLater/tutorials/SuperchargeYourAppWithCF":{"role":"overview","title":"Cloud Functions","abstract":[{"type":"text","text":"Learn how to build powerful backends for your mobile apps without having to worry about running and operating servers, containers, or databases."}],"identifier":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/SuperchargeYourAppWithCF","kind":"overview","type":"topic","url":"\/tutorials\/superchargeyourappwithcf"},"doc://com.example.firebase.workshop.ReadItLater/tutorials/ReadItLater/Chapter1-SimpleFunctions#Run-Cloud-Functions-locally-using-the-Firebase-Emulator-Suite":{"role":"pseudoSymbol","title":"Run Cloud Functions locally using the Firebase Emulator Suite","abstract":[{"type":"text","text":"This part of the tutorial will guide you through setting up a Firebase project for your Cloud Functions, creating your first Cloud Functions, and calling them via HTTP requests from the command line and a mobile app (iOS \/ Android). You will also learn how to use the Firebase Emulator Suite to run and test your Cloud Functions locally."}],"identifier":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter1-SimpleFunctions#Run-Cloud-Functions-locally-using-the-Firebase-Emulator-Suite","kind":"section","type":"section","url":"\/tutorials\/readitlater\/chapter1-simplefunctions#Run-Cloud-Functions-locally-using-the-Firebase-Emulator-Suite"},"04-use-of-extensions-and-pub-sub-functions.zip":{"checksum":"6fbd8f8f88182ddf6d1e300195031b0093f12110c32ba0f47c8af398244aefee228c531735c05e2df4ce30ea787b2ae902226b28f4939f3dee26e212f3939735","type":"download","identifier":"04-use-of-extensions-and-pub-sub-functions.zip","url":"\/downloads\/04-use-of-extensions-and-pub-sub-functions.zip"},"doc://com.example.firebase.workshop.ReadItLater/tutorials/ReadItLater/Chapter1-SimpleFunctions#Connect-your-iOS-Android-app-to-Firebase":{"role":"pseudoSymbol","title":"Connect your iOS \/ Android app to Firebase","abstract":[{"type":"text","text":"This part of the tutorial will guide you through setting up a Firebase project for your Cloud Functions, creating your first Cloud Functions, and calling them via HTTP requests from the command line and a mobile app (iOS \/ Android). You will also learn how to use the Firebase Emulator Suite to run and test your Cloud Functions locally."}],"identifier":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter1-SimpleFunctions#Connect-your-iOS-Android-app-to-Firebase","kind":"section","type":"section","url":"\/tutorials\/readitlater\/chapter1-simplefunctions#Connect-your-iOS-Android-app-to-Firebase"},"chapter4-everythingComesTogether.png":{"alt":"Everything Comes Together","type":"image","identifier":"chapter4-everythingComesTogether.png","variants":[{"url":"\/images\/chapter4-everythingComesTogether.png","traits":["1x","light"]}]},"https://cloud.google.com/appengine/docs/legacy/standard/python/config/cronref":{"title":"here","titleInlineContent":[{"type":"text","text":"here"}],"type":"link","identifier":"https:\/\/cloud.google.com\/appengine\/docs\/legacy\/standard\/python\/config\/cronref","url":"https:\/\/cloud.google.com\/appengine\/docs\/legacy\/standard\/python\/config\/cronref"},"chapter4-index-03.ts":{"syntax":"ts","content":["\/\/ TODO: (1) Add the scheduleMailSending functions that runs every two minutes","export const scheduleMailSending = functions.pubsub.schedule('every 2 minutes').onRun(async (context) => {","        ","    \/\/ TODO: (2) Get the articles and and mail collections reference","    const articlesRef = admin.firestore().collection('articles');","    const mailRef = admin.firestore().collection('mail');","   ","    \/\/ TODO: (3) Get the articles that have a not nil userId","    ","});"],"fileName":"index.ts","identifier":"chapter4-index-03.ts","type":"file","fileType":"ts","highlights":[{"line":5},{"line":6},{"line":7},{"line":8},{"line":9}]},"chapter4-complexApp.png":{"alt":"Use of Extensions and pub\/sub Functions","type":"image","identifier":"chapter4-complexApp.png","variants":[{"url":"\/images\/chapter4-complexApp.png","traits":["1x","light"]}]},"chapter4-installingEmailExtension-06.png":{"alt":"Installing Email Extension","type":"image","identifier":"chapter4-installingEmailExtension-06.png","variants":[{"url":"\/images\/chapter4-installingEmailExtension-06.png","traits":["1x","light"]}]},"chapter4-installingEmailExtension-00.png":{"alt":"Trigger Email from Firestore","type":"image","identifier":"chapter4-installingEmailExtension-00.png","variants":[{"url":"\/images\/chapter4-installingEmailExtension-00.png","traits":["1x","light"]}]},"doc://com.example.firebase.workshop.ReadItLater/tutorials/ReadItLater/Chapter1-SimpleFunctions#Update-your-Android-app-to-use-the-Firebase-Emulator":{"role":"pseudoSymbol","title":"Update your Android app to use the Firebase Emulator","abstract":[{"type":"text","text":"This part of the tutorial will guide you through setting up a Firebase project for your Cloud Functions, creating your first Cloud Functions, and calling them via HTTP requests from the command line and a mobile app (iOS \/ Android). You will also learn how to use the Firebase Emulator Suite to run and test your Cloud Functions locally."}],"identifier":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter1-SimpleFunctions#Update-your-Android-app-to-use-the-Firebase-Emulator","kind":"section","type":"section","url":"\/tutorials\/readitlater\/chapter1-simplefunctions#Update-your-Android-app-to-use-the-Firebase-Emulator"},"chapter4-installingEmailExtension-12.png":{"alt":"Installing Email Extension","type":"image","identifier":"chapter4-installingEmailExtension-12.png","variants":[{"url":"\/images\/chapter4-installingEmailExtension-12.png","traits":["1x","light"]}]},"doc://com.example.firebase.workshop.ReadItLater/tutorials/ReadItLater/Chapter2-ComplexFunctions#Compute-the-Reading-Time":{"role":"pseudoSymbol","title":"Compute the Reading Time","abstract":[{"type":"text","text":"This tutorial guides you through a typical scenario for using "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Cloud Functions"}]},{"type":"text","text":" in a Firebase app. You will write a "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Cloud Function"}]},{"type":"text","text":" that will be run every time the user adds a new document to Cloud Firestore. This is called a "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Cloud Function Trigger"}]},{"type":"text","text":"."}],"identifier":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter2-ComplexFunctions#Compute-the-Reading-Time","kind":"section","type":"section","url":"\/tutorials\/readitlater\/chapter2-complexfunctions#Compute-the-Reading-Time"},"https://extensions.dev/extensions/firebase/firestore-send-email":{"title":"Trigger Email from Firestore","titleInlineContent":[{"type":"text","text":"Trigger Email from Firestore"}],"type":"link","identifier":"https:\/\/extensions.dev\/extensions\/firebase\/firestore-send-email","url":"https:\/\/extensions.dev\/extensions\/firebase\/firestore-send-email"},"doc://com.example.firebase.workshop.ReadItLater/tutorials/ReadItLater/Chapter4-FirebaseExtensions":{"role":"project","title":"Use of Extensions and pub sub Functions","estimatedTime":"40min","abstract":[{"type":"text","text":"Now, you want to send a weekly email reminder to your users with their articles of the week. This is a common use case that can be easily achieved with Firebase Cloud Functions. Firebase Cloud Functions provide a simple yet powerful way to set up email extensions for your application, allowing you to send emails programmatically. In this chapter, you will guide you through the process of setting up email extensions for Firebase Cloud Functions and demonstrate how to create a Pub\/Sub function to trigger email notifications. By the end of this chapter, you will have a working understanding of how to leverage Firebase Cloud Functions to send emails and create Pub\/Sub functions. So let’s dive in and learn how to set up email extensions for Firebase Cloud Functions!"}],"identifier":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter4-FirebaseExtensions","kind":"project","type":"topic","url":"\/tutorials\/readitlater\/chapter4-firebaseextensions"},"doc://com.example.firebase.workshop.ReadItLater/tutorials/ReadItLater/Chapter2-ComplexFunctions#Add-new-Articles-to-Cloud-Firestore-iOS":{"role":"pseudoSymbol","title":"Add new Articles to Cloud Firestore - iOS","abstract":[{"type":"text","text":"This tutorial guides you through a typical scenario for using "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Cloud Functions"}]},{"type":"text","text":" in a Firebase app. You will write a "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Cloud Function"}]},{"type":"text","text":" that will be run every time the user adds a new document to Cloud Firestore. This is called a "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Cloud Function Trigger"}]},{"type":"text","text":"."}],"identifier":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter2-ComplexFunctions#Add-new-Articles-to-Cloud-Firestore-iOS","kind":"section","type":"section","url":"\/tutorials\/readitlater\/chapter2-complexfunctions#Add-new-Articles-to-Cloud-Firestore-iOS"},"doc://com.example.firebase.workshop.ReadItLater/tutorials/ReadItLater/Chapter2-ComplexFunctions#Fetch-the-Articles-Metadata-and-HTML":{"role":"pseudoSymbol","title":"Fetch the Article's Metadata and HTML","abstract":[{"type":"text","text":"This tutorial guides you through a typical scenario for using "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Cloud Functions"}]},{"type":"text","text":" in a Firebase app. You will write a "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Cloud Function"}]},{"type":"text","text":" that will be run every time the user adds a new document to Cloud Firestore. This is called a "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Cloud Function Trigger"}]},{"type":"text","text":"."}],"identifier":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter2-ComplexFunctions#Fetch-the-Articles-Metadata-and-HTML","kind":"section","type":"section","url":"\/tutorials\/readitlater\/chapter2-complexfunctions#Fetch-the-Articles-Metadata-and-HTML"},"chapter4-installingEmailExtension-02.png":{"alt":"Installing Email Extension","type":"image","identifier":"chapter4-installingEmailExtension-02.png","variants":[{"url":"\/images\/chapter4-installingEmailExtension-02.png","traits":["1x","light"]}]},"chapter4-installingEmailExtension-08.png":{"alt":"Installing Email Extension","type":"image","identifier":"chapter4-installingEmailExtension-08.png","variants":[{"url":"\/images\/chapter4-installingEmailExtension-08.png","traits":["1x","light"]}]},"doc://com.example.firebase.workshop.ReadItLater/tutorials/ReadItLater/Chapter2-ComplexFunctions#Add-new-Articles-to-Cloud-Firestore-Android":{"role":"pseudoSymbol","title":"Add new Articles to Cloud Firestore - Android","abstract":[{"type":"text","text":"This tutorial guides you through a typical scenario for using "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Cloud Functions"}]},{"type":"text","text":" in a Firebase app. You will write a "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Cloud Function"}]},{"type":"text","text":" that will be run every time the user adds a new document to Cloud Firestore. This is called a "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Cloud Function Trigger"}]},{"type":"text","text":"."}],"identifier":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter2-ComplexFunctions#Add-new-Articles-to-Cloud-Firestore-Android","kind":"section","type":"section","url":"\/tutorials\/readitlater\/chapter2-complexfunctions#Add-new-Articles-to-Cloud-Firestore-Android"},"chapter4-clock.png":{"alt":"pub\/sub Functions","type":"image","identifier":"chapter4-clock.png","variants":[{"url":"\/images\/chapter4-clock.png","traits":["1x","light"]}]},"doc://com.example.firebase.workshop.ReadItLater/tutorials/ReadItLater/Chapter4-FirebaseExtensions#Bonus-Content-Handlebar":{"role":"pseudoSymbol","title":"Bonus Content: Handlebar","abstract":[{"type":"text","text":"Now, you want to send a weekly email reminder to your users with their articles of the week. This is a common use case that can be easily achieved with Firebase Cloud Functions. Firebase Cloud Functions provide a simple yet powerful way to set up email extensions for your application, allowing you to send emails programmatically. In this chapter, you will guide you through the process of setting up email extensions for Firebase Cloud Functions and demonstrate how to create a Pub\/Sub function to trigger email notifications. By the end of this chapter, you will have a working understanding of how to leverage Firebase Cloud Functions to send emails and create Pub\/Sub functions. So let’s dive in and learn how to set up email extensions for Firebase Cloud Functions!"}],"identifier":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter4-FirebaseExtensions#Bonus-Content-Handlebar","kind":"section","type":"section","url":"\/tutorials\/readitlater\/chapter4-firebaseextensions#Bonus-Content-Handlebar"},"chapter4-installingEmailExtension-10.png":{"alt":"Installing Email Extension","type":"image","identifier":"chapter4-installingEmailExtension-10.png","variants":[{"url":"\/images\/chapter4-installingEmailExtension-10.png","traits":["1x","light"]}]},"chapter4-index-04.ts":{"syntax":"ts","content":["\/\/ TODO: (1) Add the scheduleMailSending functions that runs every two minutes","export const scheduleMailSending = functions.pubsub.schedule('every 2 minutes').onRun(async (context) => {","        ","    \/\/ TODO: (2) Get the articles and and mail collections reference","    const articlesRef = admin.firestore().collection('articles');","    const mailRef = admin.firestore().collection('mail');","   ","    \/\/ TODO: (3) Get the articles that have a not nil userId","    const articlesSnapshot = await articlesRef.where('userId', '!=', '').get();","","    \/\/ TODO: (4) Group the articles based on userIds, hint: you can use ArticlesByUserId that is defined outside this function ","","});","","interface ArticlesByUserId {","    [userId: string]: Array<ArticleDocument>;","}"],"fileName":"index.ts","identifier":"chapter4-index-04.ts","type":"file","fileType":"ts","highlights":[{"line":9},{"line":10},{"line":11},{"line":12},{"line":14},{"line":15},{"line":16},{"line":17}]},"doc://com.example.firebase.workshop.ReadItLater/tutorials/ReadItLater/Chapter1-SimpleFunctions":{"role":"project","title":"Calling Cloud Functions via HTTP requests","estimatedTime":"50min","abstract":[{"type":"text","text":"This part of the tutorial will guide you through setting up a Firebase project for your Cloud Functions, creating your first Cloud Functions, and calling them via HTTP requests from the command line and a mobile app (iOS \/ Android). You will also learn how to use the Firebase Emulator Suite to run and test your Cloud Functions locally."}],"identifier":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter1-SimpleFunctions","kind":"project","type":"topic","url":"\/tutorials\/readitlater\/chapter1-simplefunctions"},"doc://com.example.firebase.workshop.ReadItLater/tutorials/ReadItLater/Chapter1-SimpleFunctions#Install-the-Firebase-CLI":{"role":"pseudoSymbol","title":"Install the Firebase CLI","abstract":[{"type":"text","text":"This part of the tutorial will guide you through setting up a Firebase project for your Cloud Functions, creating your first Cloud Functions, and calling them via HTTP requests from the command line and a mobile app (iOS \/ Android). You will also learn how to use the Firebase Emulator Suite to run and test your Cloud Functions locally."}],"identifier":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter1-SimpleFunctions#Install-the-Firebase-CLI","kind":"section","type":"section","url":"\/tutorials\/readitlater\/chapter1-simplefunctions#Install-the-Firebase-CLI"},"html":{"syntax":"","content":["<head>","  <meta charset=\"utf-8\">","  <h2>Articles <\/title>","  <\/h2>","<body>","  <ul> {{#each articles}}","      <li>","        <img src={{this.imageUrl}} alt={{this.title}} style=\"max-width: 80px; max-height: 80px; margin-right: 20px; object-fit: contain;\">","        <div>","          <h3 style=\"font-size: 20px; font-weight: bold; margin: 0 0 10px;\">\"{{this.url}}”<\/h3>","          <p style=\"font-size: 16px; margin: 0 0 10px;\">","            <a href={{this.url}} target=\"_blank\" style=\"color:#333; text-decoration: none;\">{{this.siteName}}<\/a>","          <\/p>","        <\/div>","      <\/li>","    {{\/each}}","  <\/ul>","<\/body>","<\/html>"],"fileName":"Handlebar html","identifier":"html","type":"file","fileType":"","highlights":[]},"doc://com.example.firebase.workshop.ReadItLater/tutorials/ReadItLater/Chapter2-ComplexFunctions#Implement-a-Cloud-Firestore-Trigger":{"role":"pseudoSymbol","title":"Implement a Cloud Firestore Trigger","abstract":[{"type":"text","text":"This tutorial guides you through a typical scenario for using "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Cloud Functions"}]},{"type":"text","text":" in a Firebase app. You will write a "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Cloud Function"}]},{"type":"text","text":" that will be run every time the user adds a new document to Cloud Firestore. This is called a "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Cloud Function Trigger"}]},{"type":"text","text":"."}],"identifier":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter2-ComplexFunctions#Implement-a-Cloud-Firestore-Trigger","kind":"section","type":"section","url":"\/tutorials\/readitlater\/chapter2-complexfunctions#Implement-a-Cloud-Firestore-Trigger"},"doc://com.example.firebase.workshop.ReadItLater/tutorials/ReadItLater/Chapter4-FirebaseExtensions#Adding-pubsub-Functions":{"role":"pseudoSymbol","title":"Adding pub\/sub Functions","abstract":[{"type":"text","text":"Now, you want to send a weekly email reminder to your users with their articles of the week. This is a common use case that can be easily achieved with Firebase Cloud Functions. Firebase Cloud Functions provide a simple yet powerful way to set up email extensions for your application, allowing you to send emails programmatically. In this chapter, you will guide you through the process of setting up email extensions for Firebase Cloud Functions and demonstrate how to create a Pub\/Sub function to trigger email notifications. By the end of this chapter, you will have a working understanding of how to leverage Firebase Cloud Functions to send emails and create Pub\/Sub functions. So let’s dive in and learn how to set up email extensions for Firebase Cloud Functions!"}],"identifier":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter4-FirebaseExtensions#Adding-pubsub-Functions","kind":"section","type":"section","url":"\/tutorials\/readitlater\/chapter4-firebaseextensions#Adding-pubsub-Functions"},"chapter4-index-02.ts":{"syntax":"ts","content":["\/\/ TODO: (1) Add the scheduleMailSending functions that runs every two minutes","export const scheduleMailSending = functions.pubsub.schedule('every 2 minutes').onRun(async (context) => {","        ","    \/\/ TODO: (2) Get the articles and and mail collections reference","});"],"fileName":"index.ts","identifier":"chapter4-index-02.ts","type":"file","fileType":"ts","highlights":[{"line":2},{"line":3},{"line":4},{"line":5}]},"doc://com.example.firebase.workshop.ReadItLater/tutorials/SuperchargeYourAppWithCF/Building-intelligent-applications-with-Callable-Functions-and-OpenAI-APIs":{"role":"article","title":"Building intelligent applications with Callable Functions and OpenAI APIs","abstract":[],"identifier":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/SuperchargeYourAppWithCF\/Building-intelligent-applications-with-Callable-Functions-and-OpenAI-APIs","kind":"article","type":"topic","url":"\/tutorials\/superchargeyourappwithcf\/building-intelligent-applications-with-callable-functions-and-openai-apis"},"doc://com.example.firebase.workshop.ReadItLater/tutorials/ReadItLater/Chapter1-SimpleFunctions#Exercise-Create-a-Cloud-Function-to-greet-the-user":{"role":"pseudoSymbol","title":"Exercise: Create a Cloud Function to greet the user","abstract":[{"type":"text","text":"This part of the tutorial will guide you through setting up a Firebase project for your Cloud Functions, creating your first Cloud Functions, and calling them via HTTP requests from the command line and a mobile app (iOS \/ Android). You will also learn how to use the Firebase Emulator Suite to run and test your Cloud Functions locally."}],"identifier":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter1-SimpleFunctions#Exercise-Create-a-Cloud-Function-to-greet-the-user","kind":"section","type":"section","url":"\/tutorials\/readitlater\/chapter1-simplefunctions#Exercise-Create-a-Cloud-Function-to-greet-the-user"},"doc://com.example.firebase.workshop.ReadItLater/tutorials/ReadItLater/Chapter1-SimpleFunctions#Update-your-iOS-app-to-use-the-Firebase-Emulator":{"role":"pseudoSymbol","title":"Update your iOS app to use the Firebase Emulator","abstract":[{"type":"text","text":"This part of the tutorial will guide you through setting up a Firebase project for your Cloud Functions, creating your first Cloud Functions, and calling them via HTTP requests from the command line and a mobile app (iOS \/ Android). You will also learn how to use the Firebase Emulator Suite to run and test your Cloud Functions locally."}],"identifier":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter1-SimpleFunctions#Update-your-iOS-app-to-use-the-Firebase-Emulator","kind":"section","type":"section","url":"\/tutorials\/readitlater\/chapter1-simplefunctions#Update-your-iOS-app-to-use-the-Firebase-Emulator"},"outline-puzzlepiece.extension.png":{"alt":"Extensions","type":"image","identifier":"outline-puzzlepiece.extension.png","variants":[{"url":"\/images\/outline-puzzlepiece.extension.png","traits":["1x","light"]}]},"doc://com.example.firebase.workshop.ReadItLater/tutorials/SuperchargeYourAppWithCF/Getting-Started-with-Cloud-Functions":{"role":"article","title":"Getting Started with Cloud Functions","abstract":[],"identifier":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/SuperchargeYourAppWithCF\/Getting-Started-with-Cloud-Functions","kind":"article","type":"topic","url":"\/tutorials\/superchargeyourappwithcf\/getting-started-with-cloud-functions"},"chapter4-installingEmailExtension-03.png":{"alt":"Installing Email Extension","type":"image","identifier":"chapter4-installingEmailExtension-03.png","variants":[{"url":"\/images\/chapter4-installingEmailExtension-03.png","traits":["1x","light"]}]},"doc://com.example.firebase.workshop.ReadItLater/tutorials/ReadItLater/Chapter3-CallableFunctions#Callable-Functions":{"role":"pseudoSymbol","title":"Callable Functions","abstract":[{"type":"text","text":"This article explains how to build intelligent applications using OpenAI APIs and callable functions. It discusses the benefits of using callable functions, provides a step-by-step guide to building callable functions that utilize OpenAI’s APIs, and demonstrates how to use OpenAI to summarize a URL through a callable function. This chapter also covers authentication for access to callable functions and provides information on how to use the summarization function in mobile apps. By the end of the chapter, readers will be able to create their own callable function that calls OpenAI APIs and use the summarization function in mobile apps."}],"identifier":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter3-CallableFunctions#Callable-Functions","kind":"section","type":"section","url":"\/tutorials\/readitlater\/chapter3-callablefunctions#Callable-Functions"},"doc://com.example.firebase.workshop.ReadItLater/tutorials/ReadItLater/Chapter1-SimpleFunctions#Call-the-greetUser-from-your-iOS-App":{"role":"pseudoSymbol","title":"Call the greetUser from your iOS App","abstract":[{"type":"text","text":"This part of the tutorial will guide you through setting up a Firebase project for your Cloud Functions, creating your first Cloud Functions, and calling them via HTTP requests from the command line and a mobile app (iOS \/ Android). You will also learn how to use the Firebase Emulator Suite to run and test your Cloud Functions locally."}],"identifier":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter1-SimpleFunctions#Call-the-greetUser-from-your-iOS-App","kind":"section","type":"section","url":"\/tutorials\/readitlater\/chapter1-simplefunctions#Call-the-greetUser-from-your-iOS-App"},"doc://com.example.firebase.workshop.ReadItLater/tutorials/SuperchargeYourAppWithCF/Firebase-Extensions-and-Pub/Sub-Functions":{"role":"article","title":"Firebase Extensions and Pub\/Sub Functions","abstract":[],"identifier":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/SuperchargeYourAppWithCF\/Firebase-Extensions-and-Pub\/Sub-Functions","kind":"article","type":"topic","url":"\/tutorials\/superchargeyourappwithcf\/firebase-extensions-and-pub\/sub-functions"},"chapter4-firebaseConsole.png":{"alt":"Firebase console","type":"image","identifier":"chapter4-firebaseConsole.png","variants":[{"url":"\/images\/chapter4-firebaseConsole.png","traits":["1x","light"]}]},"doc://com.example.firebase.workshop.ReadItLater/tutorials/ReadItLater/Chapter1-SimpleFunctions#Set-up-a-Firebase-project":{"role":"pseudoSymbol","title":"Set up a Firebase project","abstract":[{"type":"text","text":"This part of the tutorial will guide you through setting up a Firebase project for your Cloud Functions, creating your first Cloud Functions, and calling them via HTTP requests from the command line and a mobile app (iOS \/ Android). You will also learn how to use the Firebase Emulator Suite to run and test your Cloud Functions locally."}],"identifier":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter1-SimpleFunctions#Set-up-a-Firebase-project","kind":"section","type":"section","url":"\/tutorials\/readitlater\/chapter1-simplefunctions#Set-up-a-Firebase-project"},"chapter4-installingEmailExtension-09.png":{"alt":"Installing Email Extension","type":"image","identifier":"chapter4-installingEmailExtension-09.png","variants":[{"url":"\/images\/chapter4-installingEmailExtension-09.png","traits":["1x","light"]}]},"chapter4-installingEmailExtension-05.png":{"alt":"Installing Email Extension","type":"image","identifier":"chapter4-installingEmailExtension-05.png","variants":[{"url":"\/images\/chapter4-installingEmailExtension-05.png","traits":["1x","light"]}]},"Xcode 14":{"title":"Xcode 14","type":"xcodeRequirement","identifier":"Xcode 14","url":"https:\/\/xcodereleases.com\/"},"chapter1-deploy.sh":{"syntax":"sh","content":["","","$  firebase deploy --only functions",""],"fileName":"deploy.sh","identifier":"chapter1-deploy.sh","type":"file","fileType":"sh","highlights":[]},"doc://com.example.firebase.workshop.ReadItLater/tutorials/ReadItLater/Chapter1-SimpleFunctions#Deploy-and-test-your-Cloud-Functions":{"role":"pseudoSymbol","title":"Deploy and test your Cloud Functions","abstract":[{"type":"text","text":"This part of the tutorial will guide you through setting up a Firebase project for your Cloud Functions, creating your first Cloud Functions, and calling them via HTTP requests from the command line and a mobile app (iOS \/ Android). You will also learn how to use the Firebase Emulator Suite to run and test your Cloud Functions locally."}],"identifier":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter1-SimpleFunctions#Deploy-and-test-your-Cloud-Functions","kind":"section","type":"section","url":"\/tutorials\/readitlater\/chapter1-simplefunctions#Deploy-and-test-your-Cloud-Functions"},"doc://com.example.firebase.workshop.ReadItLater/tutorials/ReadItLater/Chapter2-ComplexFunctions":{"role":"project","title":"Cloud Firestore Triggers","estimatedTime":"50min","abstract":[{"type":"text","text":"This tutorial guides you through a typical scenario for using "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Cloud Functions"}]},{"type":"text","text":" in a Firebase app. You will write a "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Cloud Function"}]},{"type":"text","text":" that will be run every time the user adds a new document to Cloud Firestore. This is called a "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Cloud Function Trigger"}]},{"type":"text","text":"."}],"identifier":"doc:\/\/com.example.firebase.workshop.ReadItLater\/tutorials\/ReadItLater\/Chapter2-ComplexFunctions","kind":"project","type":"topic","url":"\/tutorials\/readitlater\/chapter2-complexfunctions"}}}